{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\Sistema de Encuestas por Voz\\\\client\\\\src\\\\components\\\\SimpleVoice.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n/**\n * Componente automático para síntesis de voz\n * Habla automáticamente al montarse y notifica cuando termina\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleVoice = ({\n  text,\n  onEnd,\n  autoPlay = true\n}) => {\n  _s();\n  const [isSpeaking, setIsSpeaking] = useState(false);\n\n  // Efecto para iniciar la síntesis de voz automáticamente\n  useEffect(() => {\n    if (autoPlay && text && text.trim() !== '') {\n      console.log('SimpleVoice recibió texto para hablar:', text);\n      speak();\n    }\n  }, [text]);\n\n  // Efecto de limpieza al desmontar\n  useEffect(() => {\n    return () => {\n      // Cancelar síntesis al desmontar\n      if (window.speechSynthesis) {\n        window.speechSynthesis.cancel();\n      }\n    };\n  }, []);\n  const speak = () => {\n    if (!window.speechSynthesis) {\n      console.error(\"Speech synthesis no está disponible en este navegador\");\n      if (onEnd) {\n        setTimeout(() => onEnd(), 500); // Llamar al callback en caso de error\n      }\n      return;\n    }\n    if (!text || text.trim() === '') {\n      console.warn(\"Se intentó hablar un texto vacío\");\n      if (onEnd) {\n        setTimeout(() => onEnd(), 500); // Llamar al callback con texto vacío\n      }\n      return;\n    }\n    try {\n      // Cancelar cualquier síntesis anterior\n      window.speechSynthesis.cancel();\n      console.log('Iniciando síntesis de voz en SimpleVoice');\n\n      // Crear un nuevo utterance\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = 'es-ES';\n      utterance.rate = 1;\n      utterance.pitch = 1;\n      utterance.volume = 1;\n\n      // Configurar eventos\n      setIsSpeaking(true);\n      utterance.onend = () => {\n        console.log('SimpleVoice: Síntesis completada para:', text);\n        setIsSpeaking(false);\n        if (onEnd) {\n          console.log('SimpleVoice: Ejecutando callback onEnd');\n          // Usar setTimeout para evitar problemas de sincronización\n          setTimeout(() => onEnd(), 100);\n        }\n      };\n      utterance.onerror = error => {\n        console.error(\"Error en síntesis de voz:\", error);\n        setIsSpeaking(false);\n        if (onEnd) {\n          console.log('SimpleVoice: Ejecutando callback onEnd después de error');\n          setTimeout(() => onEnd(), 100);\n        }\n      };\n\n      // Hablar automáticamente\n      window.speechSynthesis.speak(utterance);\n\n      // Backup en caso de que no se dispare el evento onend\n      // Esto ocurre en algunos navegadores\n      const maxSpeakingTime = Math.max(5000, text.length * 90); // Estimación de tiempo basada en longitud\n      setTimeout(() => {\n        if (isSpeaking) {\n          console.warn('SimpleVoice: No se detectó fin de síntesis, forzando llamada al callback');\n          setIsSpeaking(false);\n          if (onEnd) {\n            onEnd();\n          }\n        }\n      }, maxSpeakingTime);\n    } catch (error) {\n      console.error('Error al iniciar síntesis de voz:', error);\n      setIsSpeaking(false);\n      if (onEnd) {\n        setTimeout(() => onEnd(), 100);\n      }\n    }\n  };\n\n  // Ya no mostramos botón, solo un indicador de estado\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-2\",\n    children: isSpeaking && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-primary-500 text-sm animate-pulse\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"inline-block mr-2\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-4 w-4\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), \"Hablando...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleVoice, \"/z5blsokVb7JfLDesiBHq3yamks=\");\n_c = SimpleVoice;\nexport default SimpleVoice;\nvar _c;\n$RefreshReg$(_c, \"SimpleVoice\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SimpleVoice","text","onEnd","autoPlay","_s","isSpeaking","setIsSpeaking","trim","console","log","speak","window","speechSynthesis","cancel","error","setTimeout","warn","utterance","SpeechSynthesisUtterance","lang","rate","pitch","volume","onend","onerror","maxSpeakingTime","Math","max","length","className","children","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/josep/Documents/Sistema de Encuestas por Voz/client/src/components/SimpleVoice.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n/**\n * Componente automático para síntesis de voz\n * Habla automáticamente al montarse y notifica cuando termina\n */\nconst SimpleVoice = ({ text, onEnd, autoPlay = true }) => {\n  const [isSpeaking, setIsSpeaking] = useState(false);\n\n  // Efecto para iniciar la síntesis de voz automáticamente\n  useEffect(() => {\n    if (autoPlay && text && text.trim() !== '') {\n      console.log('SimpleVoice recibió texto para hablar:', text);\n      speak();\n    }\n  }, [text]);\n\n  // Efecto de limpieza al desmontar\n  useEffect(() => {\n    return () => {\n      // Cancelar síntesis al desmontar\n      if (window.speechSynthesis) {\n        window.speechSynthesis.cancel();\n      }\n    };\n  }, []);\n\n  const speak = () => {\n    if (!window.speechSynthesis) {\n      console.error(\"Speech synthesis no está disponible en este navegador\");\n      if (onEnd) {\n        setTimeout(() => onEnd(), 500); // Llamar al callback en caso de error\n      }\n      return;\n    }\n    \n    if (!text || text.trim() === '') {\n      console.warn(\"Se intentó hablar un texto vacío\");\n      if (onEnd) {\n        setTimeout(() => onEnd(), 500); // Llamar al callback con texto vacío\n      }\n      return;\n    }\n    \n    try {\n      // Cancelar cualquier síntesis anterior\n      window.speechSynthesis.cancel();\n      \n      console.log('Iniciando síntesis de voz en SimpleVoice');\n      \n      // Crear un nuevo utterance\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = 'es-ES';\n      utterance.rate = 1;\n      utterance.pitch = 1;\n      utterance.volume = 1;\n      \n      // Configurar eventos\n      setIsSpeaking(true);\n      \n      utterance.onend = () => {\n        console.log('SimpleVoice: Síntesis completada para:', text);\n        setIsSpeaking(false);\n        if (onEnd) {\n          console.log('SimpleVoice: Ejecutando callback onEnd');\n          // Usar setTimeout para evitar problemas de sincronización\n          setTimeout(() => onEnd(), 100);\n        }\n      };\n      \n      utterance.onerror = (error) => {\n        console.error(\"Error en síntesis de voz:\", error);\n        setIsSpeaking(false);\n        if (onEnd) {\n          console.log('SimpleVoice: Ejecutando callback onEnd después de error');\n          setTimeout(() => onEnd(), 100);\n        }\n      };\n      \n      // Hablar automáticamente\n      window.speechSynthesis.speak(utterance);\n      \n      // Backup en caso de que no se dispare el evento onend\n      // Esto ocurre en algunos navegadores\n      const maxSpeakingTime = Math.max(5000, text.length * 90); // Estimación de tiempo basada en longitud\n      setTimeout(() => {\n        if (isSpeaking) {\n          console.warn('SimpleVoice: No se detectó fin de síntesis, forzando llamada al callback');\n          setIsSpeaking(false);\n          if (onEnd) {\n            onEnd();\n          }\n        }\n      }, maxSpeakingTime);\n    } catch (error) {\n      console.error('Error al iniciar síntesis de voz:', error);\n      setIsSpeaking(false);\n      if (onEnd) {\n        setTimeout(() => onEnd(), 100);\n      }\n    }\n  };\n\n  // Ya no mostramos botón, solo un indicador de estado\n  return (\n    <div className=\"my-2\">\n      {isSpeaking && (\n        <div className=\"text-primary-500 text-sm animate-pulse\">\n          <span className=\"inline-block mr-2\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n            </svg>\n          </span>\n          Hablando...\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SimpleVoice;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}