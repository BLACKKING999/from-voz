{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\Sistema de Encuestas por Voz\\\\client\\\\src\\\\pages\\\\TakeSurvey.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { isSpeechRecognitionSupported, isSpeechSynthesisSupported, listenForSpeech, speakText, processVoiceResponse, checkMicrophonePermission } from '../utils/voiceSurveyAPI';\nimport { SurveyService, ResponseService } from '../services/apiService';\nimport SimpleVoice from '../components/SimpleVoice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TakeSurvey = () => {\n  _s();\n  var _survey$questions2;\n  const {\n    surveyId\n  } = useParams();\n  const navigate = useNavigate();\n  const [survey, setSurvey] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentStep, setCurrentStep] = useState('welcome'); // welcome, name, questions, thanks\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userName, setUserName] = useState('');\n  const [responses, setResponses] = useState([]);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [browserSupported, setBrowserSupported] = useState(true);\n  const [microphonePermission, setMicrophonePermission] = useState(null);\n  const [showThankYouMessage, setShowThankYouMessage] = useState(false);\n  const [voiceText, setVoiceText] = useState('');\n  const [speakEndCallback, setSpeakEndCallback] = useState(null);\n\n  // Frases para mejorar la naturalidad de la conversación\n  const CONVERSATION_PHRASES = {\n    acknowledgments: ['Entendido.', 'Perfecto.', 'Muy bien.', 'Gracias por su respuesta.', 'He registrado su respuesta.'],\n    clarifications: ['No he entendido bien. ¿Podría repetirlo?', 'Disculpe, ¿podría decirlo de nuevo?', 'No pude entender su respuesta. Intentemos de nuevo.'],\n    transitions: ['Pasemos a la siguiente pregunta.', 'Continuemos con la siguiente pregunta.', 'Ahora, la siguiente pregunta.']\n  };\n\n  // Comprobar compatibilidad del navegador y permisos\n  useEffect(() => {\n    const checkCompatibility = async () => {\n      // Verificar si el navegador soporta reconocimiento de voz\n      const speechRecognitionSupported = isSpeechRecognitionSupported();\n      const speechSynthesisSupported = isSpeechSynthesisSupported();\n      if (!speechRecognitionSupported || !speechSynthesisSupported) {\n        setBrowserSupported(false);\n        setErrorMessage('Su navegador no soporta las tecnologías de voz necesarias para esta encuesta. Por favor, use Chrome, Edge o Safari.');\n        return;\n      }\n\n      // Verificar permisos de micrófono\n      const hasMicrophonePermission = await checkMicrophonePermission();\n      setMicrophonePermission(hasMicrophonePermission);\n      if (!hasMicrophonePermission) {\n        setErrorMessage('Necesitamos permiso para usar su micrófono. Por favor, permita el acceso cuando se le solicite.');\n      }\n    };\n    checkCompatibility();\n  }, []);\n\n  // Obtener datos de la encuesta\n  useEffect(() => {\n    const fetchSurvey = async () => {\n      try {\n        setLoading(true);\n        console.log(`Intentando cargar la encuesta con ID: ${surveyId}`);\n\n        // Usar el servicio centralizado para obtener la encuesta pública\n        const data = await SurveyService.getPublicSurvey(surveyId);\n        if (data) {\n          console.log('Encuesta cargada exitosamente:', data);\n          setSurvey(data);\n          // Inicializar array de respuestas\n          setResponses(data.questions.map(() => ({\n            value: '',\n            timestamp: null\n          })));\n        } else {\n          console.error('La respuesta no contiene datos');\n          setErrorMessage('La encuesta no contiene datos válidos.');\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching survey:', error);\n\n        // Mensajes de error más específicos\n        if (error.response) {\n          // El servidor respondió con un código de error\n          if (error.response.status === 404) {\n            setErrorMessage('Encuesta no encontrada. El ID proporcionado no corresponde a ninguna encuesta existente.');\n          } else if (error.response.status === 403) {\n            setErrorMessage('Esta encuesta ya no está activa o no es pública.');\n          } else {\n            var _error$response$data;\n            setErrorMessage(`Error del servidor: ${((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error desconocido'}`);\n          }\n        } else if (error.request) {\n          // La solicitud se hizo pero no se recibió respuesta\n          setErrorMessage('No se pudo conectar con el servidor. Verifica tu conexión a internet.');\n        } else {\n          // Error al configurar la solicitud\n          setErrorMessage('Error al crear la solicitud: ' + error.message);\n        }\n        setLoading(false);\n      }\n    };\n    if (surveyId) {\n      fetchSurvey();\n    }\n  }, [surveyId]);\n\n  // Efecto para iniciar la conversación cuando la encuesta se carga correctamente\n  useEffect(() => {\n    if (survey && browserSupported && microphonePermission && !loading) {\n      console.log('Iniciando conversación automática...');\n      // Pequeño retraso para asegurar que todo está listo\n      setTimeout(() => {\n        startConversation();\n      }, 1000);\n    }\n  }, [survey, browserSupported, microphonePermission, loading]);\n\n  // Iniciar la conversación automáticamente\n  const startConversation = async () => {\n    console.log('Función startConversation ejecutada');\n    console.log('Estado actual:', {\n      survey,\n      requiresName: survey === null || survey === void 0 ? void 0 : survey.requiresName,\n      currentStep\n    });\n    const welcomeMessage = `Bienvenido a la encuesta de voz: ${survey.title}. ${survey.description || ''}`;\n    await speakText(welcomeMessage);\n\n    // Forzar siempre a pedir el nombre para probar la funcionalidad\n    setCurrentStep('name');\n    await speakText('Para empezar, ¿podría decirme su nombre?');\n    await new Promise(resolve => setTimeout(resolve, 500)); // Pequeña pausa\n    startListening();\n  };\n\n  // Mover a la sección de preguntas\n  const moveToQuestions = async () => {\n    console.log('Moviendo a la sección de preguntas...');\n    setCurrentStep('questions');\n    setCurrentQuestionIndex(0);\n    // Pequeña pausa para asegurar que los estados se actualicen\n    await new Promise(resolve => setTimeout(resolve, 500));\n    await speakCurrentQuestion();\n  };\n\n  // Hablar la pregunta actual\n  const speakCurrentQuestion = async () => {\n    console.log('Hablando pregunta actual:', currentQuestionIndex);\n    if (!survey || currentQuestionIndex >= survey.questions.length) {\n      var _survey$questions;\n      console.error('No hay más preguntas o índice inválido:', {\n        currentQuestionIndex,\n        questionsLength: survey === null || survey === void 0 ? void 0 : (_survey$questions = survey.questions) === null || _survey$questions === void 0 ? void 0 : _survey$questions.length\n      });\n      return;\n    }\n    const question = survey.questions[currentQuestionIndex];\n    console.log('Pregunta a formular:', question);\n    let questionText = question.text;\n\n    // Añadir instrucciones específicas según tipo de pregunta\n    if (question.type === 'rating') {\n      questionText += ' Por favor, responda con un número del 1 al 5, donde 1 es lo más bajo y 5 lo más alto.';\n    } else if (question.type === 'yesno') {\n      questionText += ' Por favor, responda sí o no.';\n    }\n\n    // Hablar la pregunta\n    setIsSpeaking(true);\n    try {\n      await speakText(questionText);\n      console.log('Pregunta terminada de hablar, iniciando escucha...');\n      setIsSpeaking(false);\n      // Pequeña pausa antes de empezar a escuchar\n      setTimeout(async () => {\n        console.log('Iniciando escucha desde setTimeout después de hablar pregunta');\n        await startListening();\n      }, 800);\n    } catch (error) {\n      console.error('Error al hablar la pregunta:', error);\n      setIsSpeaking(false);\n      // Reintentar en caso de error\n      setTimeout(() => speakCurrentQuestion(), 1500);\n    }\n  };\n\n  // Función para cuando termina de hablar la pregunta\n  const onQuestionSpeakEnd = () => {\n    setTimeout(startListening, 500);\n  };\n\n  // Función para cuando termina de hablar el mensaje de agradecimiento\n  const onThankYouSpeakEnd = async () => {\n    try {\n      // Enviar respuestas al servidor\n      await submitResponses();\n    } catch (error) {\n      console.error('Error submitting responses:', error);\n    }\n  };\n\n  // Función para enviar respuestas al servidor\n  const submitResponses = async () => {\n    try {\n      const formattedResponses = responses.map((response, index) => ({\n        questionId: survey.questions[index]._id,\n        questionText: survey.questions[index].text,\n        answer: response.value,\n        timestamp: response.timestamp\n      }));\n\n      // Usar el servicio centralizado para enviar respuestas\n      await ResponseService.submitResponse({\n        surveyId: survey._id,\n        surveyTitle: survey.title,\n        respondentName: userName || 'Anónimo',\n        responses: formattedResponses\n      });\n      console.log('Respuestas enviadas correctamente');\n      setCurrentStep('thanks');\n\n      // Hablar mensaje de agradecimiento\n      const thankYouMessage = survey.farewell || 'Gracias por completar esta encuesta. Sus respuestas han sido registradas correctamente.';\n      await speakText(thankYouMessage);\n      setShowThankYouMessage(true);\n    } catch (error) {\n      console.error('Error al enviar respuestas:', error);\n      setErrorMessage('Error al enviar respuestas. Por favor, intente nuevamente.');\n    }\n  };\n\n  // Función para iniciar escucha automáticamente\n  const startListening = async () => {\n    console.log('Iniciando escucha...');\n    if (isListening) {\n      console.log('Ya estaba escuchando, se ignorará esta llamada');\n      return;\n    }\n    setIsListening(true);\n    setTranscript('');\n    try {\n      console.log('Activando el reconocimiento de voz...');\n      const speechResult = await listenForSpeech();\n      console.log('Respuesta recibida:', speechResult);\n      setIsListening(false);\n\n      // Procesar la respuesta en un setTimeout para evitar problemas con el estado de React\n      setTimeout(async () => {\n        console.log('Procesando respuesta desde setTimeout');\n        await processResponse(speechResult);\n      }, 500);\n    } catch (error) {\n      console.error('Error en reconocimiento de voz:', error);\n      setIsListening(false);\n\n      // Si hubo un error, intentar nuevamente después de dar feedback\n      const clarification = CONVERSATION_PHRASES.clarifications[Math.floor(Math.random() * CONVERSATION_PHRASES.clarifications.length)];\n      await speakText(clarification);\n      // Esperar un momento antes de volver a escuchar\n      setTimeout(() => startListening(), 1000);\n    }\n  };\n\n  // Función para escuchar la voz del usuario\n  const listenForSpeech = () => {\n    console.log('Configurando listenForSpeech...');\n    return new Promise((resolve, reject) => {\n      try {\n        const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n        const recognition = new SpeechRecognition();\n        recognition.lang = 'es-ES';\n        recognition.continuous = false;\n        recognition.interimResults = false;\n        console.log('Configuración de reconocimiento completada, iniciando...');\n        recognition.onresult = event => {\n          const transcript = event.results[0][0].transcript;\n          console.log('onresult - Transcripción recibida:', transcript);\n          resolve(transcript);\n        };\n        recognition.onerror = event => {\n          console.error('Error en reconocimiento:', event.error);\n          reject(new Error(`Error de reconocimiento de voz: ${event.error}`));\n        };\n        recognition.onend = () => {\n          console.log('onend - Reconocimiento finalizado');\n          // Si no hubo resultado (onresult no se llamó) y no hubo error\n          // podemos resolver con string vacío o rechazar\n          // Comentado para evitar rechazos no deseados:\n          // reject(new Error('No se detectó voz'));\n        };\n\n        // Comenzar a escuchar\n        recognition.start();\n        console.log('Reconocimiento iniciado correctamente');\n\n        // Asegurar que no se quede escuchando indefinidamente\n        setTimeout(() => {\n          try {\n            recognition.stop();\n            console.log('Reconocimiento detenido por timeout');\n          } catch (e) {\n            console.log('Error al detener reconocimiento por timeout', e);\n          }\n        }, 10000); // 10 segundos máximo de escucha\n      } catch (error) {\n        console.error('Error al inicializar reconocimiento de voz:', error);\n        reject(error);\n      }\n    });\n  };\n\n  // Función para procesar la respuesta del usuario con NLP mejorado\n  const processResponse = async text => {\n    console.log('Procesando respuesta:', text);\n    if (!text || text.trim() === '') {\n      console.log('Respuesta vacía, volviendo a escuchar...');\n      setTimeout(() => startListening(), 1000);\n      return;\n    }\n    setTranscript(text);\n    try {\n      if (currentStep === 'name') {\n        console.log('Procesando nombre:', text);\n        // Extraer el nombre usando técnicas básicas de NLP\n        const possibleName = extractName(text);\n        console.log('Nombre extraído:', possibleName);\n        setUserName(possibleName);\n\n        // Confirmar y seguir\n        console.log('Agradeciendo y pasando a las preguntas...');\n        await speakText(`Gracias, ${possibleName}. Comencemos con la encuesta.`);\n        console.log('Mensaje de agradecimiento completado');\n\n        // Usar setTimeout para asegurar que el cambio de estado se complete antes de continuar\n        setTimeout(async () => {\n          console.log('Ejecutando moveToQuestions desde setTimeout');\n          await moveToQuestions();\n        }, 1000);\n        return;\n      }\n      if (currentStep === 'questions') {\n        console.log('Procesando respuesta a pregunta:', currentQuestionIndex);\n        const currentQuestion = survey.questions[currentQuestionIndex];\n\n        // Procesar la respuesta según el tipo de pregunta\n        const processedResponse = processVoiceResponse(text, currentQuestion.type);\n        console.log('Respuesta procesada:', processedResponse);\n        if (processedResponse !== null) {\n          // Respuesta válida\n          saveResponse(processedResponse);\n\n          // Dar feedback al usuario\n          const acknowledgment = CONVERSATION_PHRASES.acknowledgments[Math.floor(Math.random() * CONVERSATION_PHRASES.acknowledgments.length)];\n          await speakText(acknowledgment);\n\n          // Transición a siguiente pregunta o finalizar\n          if (currentQuestionIndex < survey.questions.length - 1) {\n            const transition = CONVERSATION_PHRASES.transitions[Math.floor(Math.random() * CONVERSATION_PHRASES.transitions.length)];\n            await speakText(transition);\n\n            // Incrementar el índice y pasar a la siguiente pregunta\n            setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n\n            // Esperar a que se actualice el estado antes de continuar\n            console.log('Avanzando a la siguiente pregunta...');\n\n            // Usar setTimeout para asegurar que el cambio de estado se complete\n            setTimeout(async () => {\n              console.log('Ejecutando speakCurrentQuestion desde setTimeout');\n              await speakCurrentQuestion();\n            }, 1000);\n          } else {\n            // Finalizar encuesta\n            console.log('Terminando encuesta, enviando respuestas...');\n            await submitResponses();\n          }\n        } else {\n          // Respuesta inválida, pedir aclaración\n          console.log('Respuesta inválida, pidiendo aclaración...');\n          const clarification = CONVERSATION_PHRASES.clarifications[Math.floor(Math.random() * CONVERSATION_PHRASES.clarifications.length)];\n          await speakText(clarification);\n\n          // Usar setTimeout para evitar problemas con promesas anidadas\n          setTimeout(async () => {\n            console.log('Reiniciando escucha después de aclaración');\n            await startListening();\n          }, 800);\n        }\n      }\n    } catch (error) {\n      console.error('Error durante el procesamiento de la respuesta:', error);\n      // Intentar recuperarse del error\n      setTimeout(async () => {\n        if (currentStep === 'name') {\n          await startConversation();\n        } else if (currentStep === 'questions') {\n          await speakCurrentQuestion();\n        }\n      }, 1500);\n    }\n  };\n\n  // Extraer un posible nombre de un texto\n  const extractName = text => {\n    // Eliminar frases comunes de presentación\n    const cleanText = text.replace(/mi nombre es|me llamo|soy/gi, '').trim();\n\n    // Si solo queda una palabra, probablemente es el nombre\n    const words = cleanText.split(' ');\n    if (words.length === 1) return words[0];\n\n    // Si hay múltiples palabras, tomamos las primeras 2 (nombre y posible apellido)\n    return words.slice(0, 2).join(' ');\n  };\n\n  // Función para guardar respuesta y pasar a la siguiente pregunta\n  const saveResponse = value => {\n    const updatedResponses = [...responses];\n    updatedResponses[currentQuestionIndex] = {\n      value,\n      timestamp: new Date().toISOString()\n    };\n    setResponses(updatedResponses);\n\n    // Verificar si hay más preguntas\n    if (currentQuestionIndex < survey.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      // Fin de la encuesta\n      setCurrentStep('thanks');\n    }\n  };\n\n  // Manejar clic en botón de micrófono\n  const handleMicrophoneClick = () => {\n    if (isListening) {\n      setIsListening(false);\n    } else {\n      startListening();\n    }\n  };\n\n  // Manejar clic en botones de opciones \n  const handleOptionClick = value => {\n    if (isListening) return;\n    processResponse(value);\n  };\n\n  // Solicitar permisos de micrófono\n  const requestMicrophonePermission = async () => {\n    try {\n      const permission = await checkMicrophonePermission();\n      setMicrophonePermission(permission);\n      if (permission) {\n        // Iniciar la encuesta si se conceden los permisos\n        setCurrentStep('welcome');\n      } else {\n        setErrorMessage('No se pudo obtener permiso para el micrófono. Por favor, permita el acceso en la configuración de su navegador.');\n      }\n    } catch (error) {\n      console.error('Error al solicitar permisos de micrófono:', error);\n      setErrorMessage('Error al solicitar permisos de micrófono.');\n    }\n  };\n\n  // Función para hablar utilizando el componente SimpleVoice\n  const speakText = text => {\n    console.log('Solicitando síntesis de voz para:', text);\n    return new Promise((resolve, reject) => {\n      if (!text) {\n        console.warn('Se intentó sintetizar texto vacío');\n        resolve();\n        return;\n      }\n      try {\n        // Establecer callback para cuando termine de hablar\n        const onSpeakEnd = () => {\n          console.log('Síntesis de voz completada para:', text);\n          setVoiceText('');\n          resolve();\n        };\n\n        // Actualizar estado para activar SimpleVoice\n        setSpeakEndCallback(() => onSpeakEnd);\n        setVoiceText(text);\n      } catch (error) {\n        console.error('Error al iniciar síntesis de voz:', error);\n        reject(error);\n      }\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center my-12\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"animate-spin h-8 w-8 text-primary-500\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"opacity-25\",\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\",\n          stroke: \"currentColor\",\n          strokeWidth: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          className: \"opacity-75\",\n          fill: \"currentColor\",\n          d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }, this);\n  }\n  if (!survey) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center py-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        className: \"h-16 w-16 mx-auto text-gray-400 mb-4\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-800 mb-2\",\n        children: \"Encuesta no encontrada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-6\",\n        children: \"La encuesta que est\\xE1s buscando no existe o ha sido eliminada.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"btn btn-primary\",\n        children: \"Volver al Inicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 7\n    }, this);\n  }\n  if (!browserSupported) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center py-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        className: \"h-16 w-16 mx-auto text-orange-400 mb-4\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-800 mb-2\",\n        children: \"Navegador no compatible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-6\",\n        children: \"Esta aplicaci\\xF3n requiere un navegador compatible con la API de Reconocimiento de Voz. Por favor, utilice Chrome, Edge o Safari para continuar.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"btn btn-primary\",\n        children: \"Intentar Nuevamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }, this);\n  }\n  if (microphonePermission === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center py-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        className: \"h-16 w-16 mx-auto text-orange-400 mb-4\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M9 10a1 1 0 011-1h4a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 01-1-1v-4a1 1 0 01-1-1h-2a1 1 0 01-1-1v-2a1 1 0 01 1-1h2a1 1 0 01 1 1v2a1 1 0 01 1 1h2a1 1 0 01 1 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1v-2a1 1 0 011-1h2z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-800 mb-2\",\n        children: \"Permiso de Micr\\xF3fono Requerido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-6\",\n        children: \"Para participar en esta encuesta por voz, necesitamos permiso para usar su micr\\xF3fono. Por favor, haga clic en el bot\\xF3n debajo para conceder acceso.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: requestMicrophonePermission,\n        className: \"btn btn-primary\",\n        children: \"Permitir Micr\\xF3fono\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-md rounded-lg p-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: loading ? 'Cargando encuesta...' : survey ? survey.title : 'Encuesta no encontrada'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this), !microphonePermission && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: requestMicrophonePermission,\n          className: \"mt-2 btn btn-primary\",\n          children: \"Permitir acceso al micr\\xF3fono\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center h-40\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this) : !browserSupported ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Su navegador no soporta las tecnolog\\xEDas de voz necesarias para esta encuesta.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2\",\n            children: \"Por favor, use un navegador compatible como Chrome, Edge o Safari.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [isListening && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fixed bottom-4 right-4 bg-primary-500 text-white py-2 px-4 rounded-full shadow-lg animate-pulse flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5 mr-2\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 19\n            }, this), \"Escuchando...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 17\n          }, this), isSpeaking && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fixed bottom-4 left-4 bg-blue-500 text-white py-2 px-4 rounded-full shadow-lg animate-pulse flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5 mr-2\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15.536a5 5 0 017.072 0m-9.9-2.828a9 9 0 0112.728 0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 19\n            }, this), \"Hablando...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 17\n          }, this), transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 p-4 rounded-lg mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500 mb-1\",\n              children: \"Su respuesta:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg\",\n              children: transcript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 17\n          }, this), currentStep === 'questions' && currentQuestionIndex < (survey === null || survey === void 0 ? void 0 : (_survey$questions2 = survey.questions) === null || _survey$questions2 === void 0 ? void 0 : _survey$questions2.length) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold mb-2\",\n                children: [\"Pregunta \", currentQuestionIndex + 1, \" de \", survey.questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-lg\",\n                children: survey.questions[currentQuestionIndex].text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 17\n          }, this), currentStep === 'questions' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full bg-gray-200 rounded-full h-2.5\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-primary-500 h-2.5 rounded-full\",\n                style: {\n                  width: `${currentQuestionIndex / survey.questions.length * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mt-2\",\n              children: [currentQuestionIndex, \" de \", survey.questions.length, \" preguntas completadas\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 17\n          }, this), currentStep === 'thanks' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-green-600\",\n              children: \"Sus respuestas han sido guardadas correctamente.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: survey.farewell || 'Gracias por completar esta encuesta.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 19\n            }, this), showThankYouMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 flex space-x-4 justify-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => navigate('/surveys/public'),\n                className: \"btn btn-primary\",\n                children: \"Ver Otras Encuestas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => navigate('/'),\n                className: \"btn btn-outline\",\n                children: \"Volver al Inicio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 p-4 rounded-lg text-sm text-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-medium mb-2\",\n        children: \"Instrucciones:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc list-inside space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Esta encuesta se realiza completamente por voz, de forma autom\\xE1tica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Escuche atentamente cada pregunta y responda cuando termine de escucharla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Para preguntas de calificaci\\xF3n, responda con un n\\xFAmero del 1 al 5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Para preguntas de s\\xED/no, responda con \\\"s\\xED\\\" o \\\"no\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Hable con claridad para que el sistema pueda entenderle correctamente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleVoice, {\n      text: voiceText,\n      onEnd: speakEndCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 595,\n    columnNumber: 5\n  }, this);\n};\n_s(TakeSurvey, \"NkulOnd1zRJ/c4Nn/2G4Lvb8Y7c=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TakeSurvey;\nexport default TakeSurvey;\nvar _c;\n$RefreshReg$(_c, \"TakeSurvey\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","isSpeechRecognitionSupported","isSpeechSynthesisSupported","listenForSpeech","speakText","processVoiceResponse","checkMicrophonePermission","SurveyService","ResponseService","SimpleVoice","jsxDEV","_jsxDEV","TakeSurvey","_s","_survey$questions2","surveyId","navigate","survey","setSurvey","loading","setLoading","currentStep","setCurrentStep","currentQuestionIndex","setCurrentQuestionIndex","userName","setUserName","responses","setResponses","isSpeaking","setIsSpeaking","isListening","setIsListening","transcript","setTranscript","errorMessage","setErrorMessage","browserSupported","setBrowserSupported","microphonePermission","setMicrophonePermission","showThankYouMessage","setShowThankYouMessage","voiceText","setVoiceText","speakEndCallback","setSpeakEndCallback","CONVERSATION_PHRASES","acknowledgments","clarifications","transitions","checkCompatibility","speechRecognitionSupported","speechSynthesisSupported","hasMicrophonePermission","fetchSurvey","console","log","data","getPublicSurvey","questions","map","value","timestamp","error","response","status","_error$response$data","message","request","setTimeout","startConversation","requiresName","welcomeMessage","title","description","Promise","resolve","startListening","moveToQuestions","speakCurrentQuestion","length","_survey$questions","questionsLength","question","questionText","text","type","onQuestionSpeakEnd","onThankYouSpeakEnd","submitResponses","formattedResponses","index","questionId","_id","answer","submitResponse","surveyTitle","respondentName","thankYouMessage","farewell","speechResult","processResponse","clarification","Math","floor","random","reject","SpeechRecognition","window","webkitSpeechRecognition","recognition","lang","continuous","interimResults","onresult","event","results","onerror","Error","onend","start","stop","e","trim","possibleName","extractName","currentQuestion","processedResponse","saveResponse","acknowledgment","transition","prevIndex","cleanText","replace","words","split","slice","join","updatedResponses","Date","toISOString","handleMicrophoneClick","handleOptionClick","requestMicrophonePermission","permission","warn","onSpeakEnd","className","children","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","d","strokeLinecap","strokeLinejoin","onClick","location","reload","style","width","onEnd","_c","$RefreshReg$"],"sources":["C:/Users/josep/Documents/Sistema de Encuestas por Voz/client/src/pages/TakeSurvey.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { \n  isSpeechRecognitionSupported,\n  isSpeechSynthesisSupported,\n  listenForSpeech,\n  speakText,\n  processVoiceResponse,\n  checkMicrophonePermission\n} from '../utils/voiceSurveyAPI';\nimport { SurveyService, ResponseService } from '../services/apiService';\nimport SimpleVoice from '../components/SimpleVoice';\n\nconst TakeSurvey = () => {\n  const { surveyId } = useParams();\n  const navigate = useNavigate();\n  const [survey, setSurvey] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentStep, setCurrentStep] = useState('welcome'); // welcome, name, questions, thanks\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userName, setUserName] = useState('');\n  const [responses, setResponses] = useState([]);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [browserSupported, setBrowserSupported] = useState(true);\n  const [microphonePermission, setMicrophonePermission] = useState(null);\n  const [showThankYouMessage, setShowThankYouMessage] = useState(false);\n  const [voiceText, setVoiceText] = useState('');\n  const [speakEndCallback, setSpeakEndCallback] = useState(null);\n\n  // Frases para mejorar la naturalidad de la conversación\n  const CONVERSATION_PHRASES = {\n    acknowledgments: [\n      'Entendido.',\n      'Perfecto.',\n      'Muy bien.',\n      'Gracias por su respuesta.',\n      'He registrado su respuesta.'\n    ],\n    clarifications: [\n      'No he entendido bien. ¿Podría repetirlo?',\n      'Disculpe, ¿podría decirlo de nuevo?',\n      'No pude entender su respuesta. Intentemos de nuevo.'\n    ],\n    transitions: [\n      'Pasemos a la siguiente pregunta.',\n      'Continuemos con la siguiente pregunta.',\n      'Ahora, la siguiente pregunta.'\n    ]\n  };\n\n  // Comprobar compatibilidad del navegador y permisos\n  useEffect(() => {\n    const checkCompatibility = async () => {\n      // Verificar si el navegador soporta reconocimiento de voz\n      const speechRecognitionSupported = isSpeechRecognitionSupported();\n      const speechSynthesisSupported = isSpeechSynthesisSupported();\n\n      if (!speechRecognitionSupported || !speechSynthesisSupported) {\n        setBrowserSupported(false);\n        setErrorMessage('Su navegador no soporta las tecnologías de voz necesarias para esta encuesta. Por favor, use Chrome, Edge o Safari.');\n        return;\n      }\n\n      // Verificar permisos de micrófono\n      const hasMicrophonePermission = await checkMicrophonePermission();\n      setMicrophonePermission(hasMicrophonePermission);\n\n      if (!hasMicrophonePermission) {\n        setErrorMessage('Necesitamos permiso para usar su micrófono. Por favor, permita el acceso cuando se le solicite.');\n      }\n    };\n\n    checkCompatibility();\n  }, []);\n\n  // Obtener datos de la encuesta\n  useEffect(() => {\n    const fetchSurvey = async () => {\n      try {\n        setLoading(true);\n        console.log(`Intentando cargar la encuesta con ID: ${surveyId}`);\n        \n        // Usar el servicio centralizado para obtener la encuesta pública\n        const data = await SurveyService.getPublicSurvey(surveyId);\n        \n        if (data) {\n          console.log('Encuesta cargada exitosamente:', data);\n          setSurvey(data);\n          // Inicializar array de respuestas\n          setResponses(data.questions.map(() => ({ value: '', timestamp: null })));\n        } else {\n          console.error('La respuesta no contiene datos');\n          setErrorMessage('La encuesta no contiene datos válidos.');\n        }\n        \n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching survey:', error);\n        \n        // Mensajes de error más específicos\n        if (error.response) {\n          // El servidor respondió con un código de error\n          if (error.response.status === 404) {\n            setErrorMessage('Encuesta no encontrada. El ID proporcionado no corresponde a ninguna encuesta existente.');\n          } else if (error.response.status === 403) {\n            setErrorMessage('Esta encuesta ya no está activa o no es pública.');\n          } else {\n            setErrorMessage(`Error del servidor: ${error.response.data?.message || 'Error desconocido'}`);\n          }\n        } else if (error.request) {\n          // La solicitud se hizo pero no se recibió respuesta\n          setErrorMessage('No se pudo conectar con el servidor. Verifica tu conexión a internet.');\n        } else {\n          // Error al configurar la solicitud\n          setErrorMessage('Error al crear la solicitud: ' + error.message);\n        }\n        \n        setLoading(false);\n      }\n    };\n    \n    if (surveyId) {\n      fetchSurvey();\n    }\n  }, [surveyId]);\n\n  // Efecto para iniciar la conversación cuando la encuesta se carga correctamente\n  useEffect(() => {\n    if (survey && browserSupported && microphonePermission && !loading) {\n      console.log('Iniciando conversación automática...');\n      // Pequeño retraso para asegurar que todo está listo\n      setTimeout(() => {\n        startConversation();\n      }, 1000);\n    }\n  }, [survey, browserSupported, microphonePermission, loading]);\n\n  // Iniciar la conversación automáticamente\n  const startConversation = async () => {\n    console.log('Función startConversation ejecutada');\n    console.log('Estado actual:', { \n      survey, \n      requiresName: survey?.requiresName,\n      currentStep\n    });\n    \n    const welcomeMessage = `Bienvenido a la encuesta de voz: ${survey.title}. ${survey.description || ''}`;\n    await speakText(welcomeMessage);\n    \n    // Forzar siempre a pedir el nombre para probar la funcionalidad\n    setCurrentStep('name');\n    await speakText('Para empezar, ¿podría decirme su nombre?');\n    await new Promise(resolve => setTimeout(resolve, 500)); // Pequeña pausa\n    startListening();\n  };\n\n  // Mover a la sección de preguntas\n  const moveToQuestions = async () => {\n    console.log('Moviendo a la sección de preguntas...');\n    setCurrentStep('questions');\n    setCurrentQuestionIndex(0);\n    // Pequeña pausa para asegurar que los estados se actualicen\n    await new Promise(resolve => setTimeout(resolve, 500));\n    await speakCurrentQuestion();\n  };\n\n  // Hablar la pregunta actual\n  const speakCurrentQuestion = async () => {\n    console.log('Hablando pregunta actual:', currentQuestionIndex);\n    if (!survey || currentQuestionIndex >= survey.questions.length) {\n      console.error('No hay más preguntas o índice inválido:', {currentQuestionIndex, questionsLength: survey?.questions?.length});\n      return;\n    }\n    \n    const question = survey.questions[currentQuestionIndex];\n    console.log('Pregunta a formular:', question);\n    let questionText = question.text;\n    \n    // Añadir instrucciones específicas según tipo de pregunta\n    if (question.type === 'rating') {\n      questionText += ' Por favor, responda con un número del 1 al 5, donde 1 es lo más bajo y 5 lo más alto.';\n    } else if (question.type === 'yesno') {\n      questionText += ' Por favor, responda sí o no.';\n    }\n    \n    // Hablar la pregunta\n    setIsSpeaking(true);\n    try {\n      await speakText(questionText);\n      console.log('Pregunta terminada de hablar, iniciando escucha...');\n      setIsSpeaking(false);\n      // Pequeña pausa antes de empezar a escuchar\n      setTimeout(async () => {\n        console.log('Iniciando escucha desde setTimeout después de hablar pregunta');\n        await startListening();\n      }, 800);\n    } catch (error) {\n      console.error('Error al hablar la pregunta:', error);\n      setIsSpeaking(false);\n      // Reintentar en caso de error\n      setTimeout(() => speakCurrentQuestion(), 1500);\n    }\n  };\n\n  // Función para cuando termina de hablar la pregunta\n  const onQuestionSpeakEnd = () => {\n    setTimeout(startListening, 500);\n  };\n\n  // Función para cuando termina de hablar el mensaje de agradecimiento\n  const onThankYouSpeakEnd = async () => {\n    try {\n      // Enviar respuestas al servidor\n      await submitResponses();\n    } catch (error) {\n      console.error('Error submitting responses:', error);\n    }\n  };\n\n  // Función para enviar respuestas al servidor\n  const submitResponses = async () => {\n    try {\n      const formattedResponses = responses.map((response, index) => ({\n        questionId: survey.questions[index]._id,\n        questionText: survey.questions[index].text,\n        answer: response.value,\n        timestamp: response.timestamp\n      }));\n\n      // Usar el servicio centralizado para enviar respuestas\n      await ResponseService.submitResponse({\n        surveyId: survey._id,\n        surveyTitle: survey.title,\n        respondentName: userName || 'Anónimo',\n        responses: formattedResponses\n      });\n\n      console.log('Respuestas enviadas correctamente');\n      setCurrentStep('thanks');\n      \n      // Hablar mensaje de agradecimiento\n      const thankYouMessage = survey.farewell || 'Gracias por completar esta encuesta. Sus respuestas han sido registradas correctamente.';\n      await speakText(thankYouMessage);\n      setShowThankYouMessage(true);\n      \n    } catch (error) {\n      console.error('Error al enviar respuestas:', error);\n      setErrorMessage('Error al enviar respuestas. Por favor, intente nuevamente.');\n    }\n  };\n\n  // Función para iniciar escucha automáticamente\n  const startListening = async () => {\n    console.log('Iniciando escucha...');\n    if (isListening) {\n      console.log('Ya estaba escuchando, se ignorará esta llamada');\n      return;\n    }\n    \n    setIsListening(true);\n    setTranscript('');\n    \n    try {\n      console.log('Activando el reconocimiento de voz...');\n      const speechResult = await listenForSpeech();\n      console.log('Respuesta recibida:', speechResult);\n      setIsListening(false);\n      \n      // Procesar la respuesta en un setTimeout para evitar problemas con el estado de React\n      setTimeout(async () => {\n        console.log('Procesando respuesta desde setTimeout');\n        await processResponse(speechResult);\n      }, 500);\n    } catch (error) {\n      console.error('Error en reconocimiento de voz:', error);\n      setIsListening(false);\n      \n      // Si hubo un error, intentar nuevamente después de dar feedback\n      const clarification = CONVERSATION_PHRASES.clarifications[Math.floor(Math.random() * CONVERSATION_PHRASES.clarifications.length)];\n      await speakText(clarification);\n      // Esperar un momento antes de volver a escuchar\n      setTimeout(() => startListening(), 1000);\n    }\n  };\n\n  // Función para escuchar la voz del usuario\n  const listenForSpeech = () => {\n    console.log('Configurando listenForSpeech...');\n    return new Promise((resolve, reject) => {\n      try {\n        const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n        const recognition = new SpeechRecognition();\n        \n        recognition.lang = 'es-ES';\n        recognition.continuous = false;\n        recognition.interimResults = false;\n        \n        console.log('Configuración de reconocimiento completada, iniciando...');\n        \n        recognition.onresult = (event) => {\n          const transcript = event.results[0][0].transcript;\n          console.log('onresult - Transcripción recibida:', transcript);\n          resolve(transcript);\n        };\n        \n        recognition.onerror = (event) => {\n          console.error('Error en reconocimiento:', event.error);\n          reject(new Error(`Error de reconocimiento de voz: ${event.error}`));\n        };\n        \n        recognition.onend = () => {\n          console.log('onend - Reconocimiento finalizado');\n          // Si no hubo resultado (onresult no se llamó) y no hubo error\n          // podemos resolver con string vacío o rechazar\n          // Comentado para evitar rechazos no deseados:\n          // reject(new Error('No se detectó voz'));\n        };\n        \n        // Comenzar a escuchar\n        recognition.start();\n        console.log('Reconocimiento iniciado correctamente');\n        \n        // Asegurar que no se quede escuchando indefinidamente\n        setTimeout(() => {\n          try {\n            recognition.stop();\n            console.log('Reconocimiento detenido por timeout');\n          } catch (e) {\n            console.log('Error al detener reconocimiento por timeout', e);\n          }\n        }, 10000); // 10 segundos máximo de escucha\n      } catch (error) {\n        console.error('Error al inicializar reconocimiento de voz:', error);\n        reject(error);\n      }\n    });\n  };\n\n  // Función para procesar la respuesta del usuario con NLP mejorado\n  const processResponse = async (text) => {\n    console.log('Procesando respuesta:', text);\n    if (!text || text.trim() === '') {\n      console.log('Respuesta vacía, volviendo a escuchar...');\n      setTimeout(() => startListening(), 1000);\n      return;\n    }\n    \n    setTranscript(text);\n    \n    try {\n      if (currentStep === 'name') {\n        console.log('Procesando nombre:', text);\n        // Extraer el nombre usando técnicas básicas de NLP\n        const possibleName = extractName(text);\n        console.log('Nombre extraído:', possibleName);\n        setUserName(possibleName);\n        \n        // Confirmar y seguir\n        console.log('Agradeciendo y pasando a las preguntas...');\n        await speakText(`Gracias, ${possibleName}. Comencemos con la encuesta.`);\n        console.log('Mensaje de agradecimiento completado');\n        \n        // Usar setTimeout para asegurar que el cambio de estado se complete antes de continuar\n        setTimeout(async () => {\n          console.log('Ejecutando moveToQuestions desde setTimeout');\n          await moveToQuestions();\n        }, 1000);\n        \n        return;\n      }\n      \n      if (currentStep === 'questions') {\n        console.log('Procesando respuesta a pregunta:', currentQuestionIndex);\n        const currentQuestion = survey.questions[currentQuestionIndex];\n        \n        // Procesar la respuesta según el tipo de pregunta\n        const processedResponse = processVoiceResponse(text, currentQuestion.type);\n        console.log('Respuesta procesada:', processedResponse);\n        \n        if (processedResponse !== null) {\n          // Respuesta válida\n          saveResponse(processedResponse);\n          \n          // Dar feedback al usuario\n          const acknowledgment = CONVERSATION_PHRASES.acknowledgments[Math.floor(Math.random() * CONVERSATION_PHRASES.acknowledgments.length)];\n          await speakText(acknowledgment);\n          \n          // Transición a siguiente pregunta o finalizar\n          if (currentQuestionIndex < survey.questions.length - 1) {\n            const transition = CONVERSATION_PHRASES.transitions[Math.floor(Math.random() * CONVERSATION_PHRASES.transitions.length)];\n            await speakText(transition);\n            \n            // Incrementar el índice y pasar a la siguiente pregunta\n            setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n            \n            // Esperar a que se actualice el estado antes de continuar\n            console.log('Avanzando a la siguiente pregunta...');\n            \n            // Usar setTimeout para asegurar que el cambio de estado se complete\n            setTimeout(async () => {\n              console.log('Ejecutando speakCurrentQuestion desde setTimeout');\n              await speakCurrentQuestion();\n            }, 1000);\n          } else {\n            // Finalizar encuesta\n            console.log('Terminando encuesta, enviando respuestas...');\n            await submitResponses();\n          }\n        } else {\n          // Respuesta inválida, pedir aclaración\n          console.log('Respuesta inválida, pidiendo aclaración...');\n          const clarification = CONVERSATION_PHRASES.clarifications[Math.floor(Math.random() * CONVERSATION_PHRASES.clarifications.length)];\n          await speakText(clarification);\n          \n          // Usar setTimeout para evitar problemas con promesas anidadas\n          setTimeout(async () => {\n            console.log('Reiniciando escucha después de aclaración');\n            await startListening();\n          }, 800);\n        }\n      }\n    } catch (error) {\n      console.error('Error durante el procesamiento de la respuesta:', error);\n      // Intentar recuperarse del error\n      setTimeout(async () => {\n        if (currentStep === 'name') {\n          await startConversation();\n        } else if (currentStep === 'questions') {\n          await speakCurrentQuestion();\n        }\n      }, 1500);\n    }\n  };\n\n  // Extraer un posible nombre de un texto\n  const extractName = (text) => {\n    // Eliminar frases comunes de presentación\n    const cleanText = text.replace(/mi nombre es|me llamo|soy/gi, '').trim();\n    \n    // Si solo queda una palabra, probablemente es el nombre\n    const words = cleanText.split(' ');\n    if (words.length === 1) return words[0];\n    \n    // Si hay múltiples palabras, tomamos las primeras 2 (nombre y posible apellido)\n    return words.slice(0, 2).join(' ');\n  };\n\n  // Función para guardar respuesta y pasar a la siguiente pregunta\n  const saveResponse = (value) => {\n    const updatedResponses = [...responses];\n    updatedResponses[currentQuestionIndex] = {\n      value,\n      timestamp: new Date().toISOString()\n    };\n    setResponses(updatedResponses);\n\n    // Verificar si hay más preguntas\n    if (currentQuestionIndex < survey.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      // Fin de la encuesta\n      setCurrentStep('thanks');\n    }\n  };\n\n  // Manejar clic en botón de micrófono\n  const handleMicrophoneClick = () => {\n    if (isListening) {\n      setIsListening(false);\n    } else {\n      startListening();\n    }\n  };\n\n  // Manejar clic en botones de opciones \n  const handleOptionClick = (value) => {\n    if (isListening) return;\n\n    processResponse(value);\n  };\n\n  // Solicitar permisos de micrófono\n  const requestMicrophonePermission = async () => {\n    try {\n      const permission = await checkMicrophonePermission();\n      setMicrophonePermission(permission);\n\n      if (permission) {\n        // Iniciar la encuesta si se conceden los permisos\n        setCurrentStep('welcome');\n      } else {\n        setErrorMessage('No se pudo obtener permiso para el micrófono. Por favor, permita el acceso en la configuración de su navegador.');\n      }\n    } catch (error) {\n      console.error('Error al solicitar permisos de micrófono:', error);\n      setErrorMessage('Error al solicitar permisos de micrófono.');\n    }\n  };\n\n  // Función para hablar utilizando el componente SimpleVoice\n  const speakText = (text) => {\n    console.log('Solicitando síntesis de voz para:', text);\n    return new Promise((resolve, reject) => {\n      if (!text) {\n        console.warn('Se intentó sintetizar texto vacío');\n        resolve();\n        return;\n      }\n      \n      try {\n        // Establecer callback para cuando termine de hablar\n        const onSpeakEnd = () => {\n          console.log('Síntesis de voz completada para:', text);\n          setVoiceText('');\n          resolve();\n        };\n        \n        // Actualizar estado para activar SimpleVoice\n        setSpeakEndCallback(() => onSpeakEnd);\n        setVoiceText(text);\n      } catch (error) {\n        console.error('Error al iniciar síntesis de voz:', error);\n        reject(error);\n      }\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center my-12\">\n        <svg className=\"animate-spin h-8 w-8 text-primary-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n      </div>\n    );\n  }\n\n  if (!survey) {\n    return (\n      <div className=\"card text-center py-12\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 mx-auto text-gray-400 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n        </svg>\n        <h3 className=\"text-lg font-medium text-gray-800 mb-2\">Encuesta no encontrada</h3>\n        <p className=\"text-gray-600 mb-6\">La encuesta que estás buscando no existe o ha sido eliminada.</p>\n        <button onClick={() => navigate('/')} className=\"btn btn-primary\">\n          Volver al Inicio\n        </button>\n      </div>\n    );\n  }\n\n  if (!browserSupported) {\n    return (\n      <div className=\"card text-center py-12\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 mx-auto text-orange-400 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n        </svg>\n        <h3 className=\"text-lg font-medium text-gray-800 mb-2\">Navegador no compatible</h3>\n        <p className=\"text-gray-600 mb-6\">\n          Esta aplicación requiere un navegador compatible con la API de Reconocimiento de Voz.\n          Por favor, utilice Chrome, Edge o Safari para continuar.\n        </p>\n        <button onClick={() => window.location.reload()} className=\"btn btn-primary\">\n          Intentar Nuevamente\n        </button>\n      </div>\n    );\n  }\n\n  if (microphonePermission === false) {\n    return (\n      <div className=\"card text-center py-12\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 mx-auto text-orange-400 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 10a1 1 0 011-1h4a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 01-1-1v-4a1 1 0 01-1-1h-2a1 1 0 01-1-1v-2a1 1 0 01 1-1h2a1 1 0 01 1 1v2a1 1 0 01 1 1h2a1 1 0 01 1 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1v-2a1 1 0 011-1h2z\" />\n        </svg>\n        <h3 className=\"text-lg font-medium text-gray-800 mb-2\">Permiso de Micrófono Requerido</h3>\n        <p className=\"text-gray-600 mb-6\">\n          Para participar en esta encuesta por voz, necesitamos permiso para usar su micrófono.\n          Por favor, haga clic en el botón debajo para conceder acceso.\n        </p>\n        <button onClick={requestMicrophonePermission} className=\"btn btn-primary\">\n          Permitir Micrófono\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-3xl mx-auto p-4\">\n      <div className=\"bg-white shadow-md rounded-lg p-6 mb-6\">\n        {/* Encabezado */}\n        <h1 className=\"text-2xl font-bold mb-4\">{loading ? 'Cargando encuesta...' : (survey ? survey.title : 'Encuesta no encontrada')}</h1>\n        \n        {/* Mensajes de error */}\n        {errorMessage && (\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n            <p>{errorMessage}</p>\n            {!microphonePermission && (\n              <button\n                onClick={requestMicrophonePermission}\n                className=\"mt-2 btn btn-primary\"\n              >\n                Permitir acceso al micrófono\n              </button>\n            )}\n          </div>\n        )}\n\n        {/* Contenido principal */}\n        <div className=\"mb-6\">\n          {loading ? (\n            <div className=\"flex justify-center items-center h-40\">\n              <div className=\"spinner\"></div>\n            </div>\n          ) : !browserSupported ? (\n            <div className=\"bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded\">\n              <p>Su navegador no soporta las tecnologías de voz necesarias para esta encuesta.</p>\n              <p className=\"mt-2\">Por favor, use un navegador compatible como Chrome, Edge o Safari.</p>\n            </div>\n          ) : (\n            <div>\n              {/* Indicador de escucha activa */}\n              {isListening && (\n                <div className=\"fixed bottom-4 right-4 bg-primary-500 text-white py-2 px-4 rounded-full shadow-lg animate-pulse flex items-center\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n                  </svg>\n                  Escuchando...\n                </div>\n              )}\n              \n              {/* Indicador de habla activa */}\n              {isSpeaking && (\n                <div className=\"fixed bottom-4 left-4 bg-blue-500 text-white py-2 px-4 rounded-full shadow-lg animate-pulse flex items-center\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15.536a5 5 0 017.072 0m-9.9-2.828a9 9 0 0112.728 0\" />\n                  </svg>\n                  Hablando...\n                </div>\n              )}\n              \n              {/* Transcripción de voz */}\n              {transcript && (\n                <div className=\"bg-gray-100 p-4 rounded-lg mb-6\">\n                  <div className=\"text-sm text-gray-500 mb-1\">Su respuesta:</div>\n                  <div className=\"text-lg\">{transcript}</div>\n                </div>\n              )}\n              \n              {/* Contenido según el paso actual */}\n              {currentStep === 'questions' && currentQuestionIndex < survey?.questions?.length && (\n                <div>\n                  <div className=\"mb-4\">\n                    <h3 className=\"text-lg font-semibold mb-2\">\n                      Pregunta {currentQuestionIndex + 1} de {survey.questions.length}\n                    </h3>\n                    <p className=\"text-lg\">{survey.questions[currentQuestionIndex].text}</p>\n                  </div>\n                </div>\n              )}\n              \n              {/* Progreso de la encuesta */}\n              {currentStep === 'questions' && (\n                <div className=\"mt-8\">\n                  <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                    <div\n                      className=\"bg-primary-500 h-2.5 rounded-full\"\n                      style={{ width: `${((currentQuestionIndex) / survey.questions.length) * 100}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"text-xs text-gray-500 mt-2\">\n                    {currentQuestionIndex} de {survey.questions.length} preguntas completadas\n                  </div>\n                </div>\n              )}\n              \n              {/* Mensaje final */}\n              {currentStep === 'thanks' && (\n                <div className=\"mt-6 space-y-4\">\n                  <p className=\"text-green-600\">Sus respuestas han sido guardadas correctamente.</p>\n                  <p>{survey.farewell || 'Gracias por completar esta encuesta.'}</p>\n                  \n                  {showThankYouMessage && (\n                    <div className=\"mt-6 flex space-x-4 justify-center\">\n                      <button\n                        onClick={() => navigate('/surveys/public')}\n                        className=\"btn btn-primary\"\n                      >\n                        Ver Otras Encuestas\n                      </button>\n                      <button\n                        onClick={() => navigate('/')}\n                        className=\"btn btn-outline\"\n                      >\n                        Volver al Inicio\n                      </button>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Instrucciones actualizadas */}\n      <div className=\"bg-gray-50 p-4 rounded-lg text-sm text-gray-600\">\n        <h3 className=\"font-medium mb-2\">Instrucciones:</h3>\n        <ul className=\"list-disc list-inside space-y-1\">\n          <li>Esta encuesta se realiza completamente por voz, de forma automática</li>\n          <li>Escuche atentamente cada pregunta y responda cuando termine de escucharla</li>\n          <li>Para preguntas de calificación, responda con un número del 1 al 5</li>\n          <li>Para preguntas de sí/no, responda con \"sí\" o \"no\"</li>\n          <li>Hable con claridad para que el sistema pueda entenderle correctamente</li>\n        </ul>\n      </div>\n      <SimpleVoice text={voiceText} onEnd={speakEndCallback} />\n    </div>\n  );\n};\n\nexport default TakeSurvey;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}