{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\Sistema de Encuestas por Voz\\\\client\\\\src\\\\pages\\\\TakeSurvey.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { SurveyService, ResponseService } from '../services/apiService';\n\n// Componentes\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport ErrorMessage from '../components/ErrorMessage';\nimport audioService from '../services/audioService';\n// Importar servicio de procesamiento de lenguaje natural\nimport * as nlpService from '../services/nlpService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TakeSurvey = () => {\n  _s();\n  const {\n    surveyId\n  } = useParams();\n  const navigate = useNavigate();\n\n  // Referencias para controlar el flujo de la conversación\n  const conversationActive = useRef(false);\n  const speakTimeoutRef = useRef(null);\n\n  // Estados\n  const [survey, setSurvey] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [responses, setResponses] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [voiceEnabled, setVoiceEnabled] = useState(true);\n  const [conversationState, setConversationState] = useState('idle'); // idle, speaking, listening, processing\n  const [conversationMessage, setConversationMessage] = useState('');\n  const [micPermission, setMicPermission] = useState('unknown'); // 'unknown', 'granted', 'denied'\n  const [recognizedText, setRecognizedText] = useState('');\n  const [status, setStatus] = useState('');\n  const [showPermissionDialog, setShowPermissionDialog] = useState(false);\n\n  // Verificar permiso del micrófono\n  const requestMicrophonePermission = async () => {\n    setConversationState('requesting_permission');\n    setConversationMessage('Solicitando permiso para el micrófono...');\n    try {\n      const permissionGranted = await audioService.requestMicrophonePermission();\n      if (permissionGranted) {\n        setMicPermission('granted');\n        setShowPermissionDialog(false);\n        setConversationMessage('Permiso concedido. Iniciando encuesta por voz...');\n\n        // Pequeño retraso para iniciar la conversación\n        setTimeout(() => {\n          startConversation();\n        }, 1000);\n      } else {\n        setMicPermission('denied');\n        setConversationState('permission_denied');\n        setConversationMessage('Se necesita acceso al micrófono para usar la función de voz');\n      }\n    } catch (error) {\n      console.error('Error al solicitar permiso:', error);\n      setMicPermission('denied');\n      setConversationState('error');\n      setConversationMessage('Error al solicitar permiso del micrófono');\n    }\n  };\n\n  // Cargar la encuesta\n  useEffect(() => {\n    const fetchSurvey = async () => {\n      try {\n        const data = await SurveyService.getPublicSurvey(surveyId);\n        console.log('Encuesta cargada:', data);\n        setSurvey(data);\n        // Inicializar respuestas vacías\n        setResponses(new Array(data.questions.length).fill(''));\n      } catch (error) {\n        console.error('Error al cargar la encuesta:', error);\n        setError('No se pudo cargar la encuesta. Verifique que el ID sea correcto y que la encuesta esté activa.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSurvey();\n\n    // Inicializar sistema de voz\n    audioService.initSpeechSystem();\n\n    // Configurar el callback para cambios en el permiso del micrófono\n    audioService.onPermissionChange((granted, errorMsg) => {\n      setMicPermission(granted ? 'granted' : 'denied');\n      if (!granted && errorMsg) {\n        setConversationMessage(`Error de permiso: ${errorMsg}`);\n        setConversationState('permission_denied');\n      }\n    });\n    return () => {\n      // Detener cualquier síntesis y reconocimiento al desmontar\n      if (speakTimeoutRef.current) {\n        clearTimeout(speakTimeoutRef.current);\n      }\n      audioService.stop();\n      conversationActive.current = false;\n      if (window.speechSynthesis) {\n        window.speechSynthesis.cancel();\n      }\n    };\n  }, [surveyId]);\n\n  // Iniciar la conversación una vez que la encuesta esté cargada\n  useEffect(() => {\n    if (survey && voiceEnabled && !conversationActive.current) {\n      // Primero verificar permiso de micrófono\n      if (micPermission === 'granted') {\n        startConversation();\n      } else if (micPermission === 'unknown') {\n        // Mostrar diálogo de permiso\n        setShowPermissionDialog(true);\n      }\n    }\n  }, [survey, voiceEnabled, micPermission]);\n\n  // Función para iniciar la conversación\n  const startConversation = () => {\n    if (!voiceEnabled || !survey) return;\n    conversationActive.current = true;\n\n    // Dar un mensaje de bienvenida\n    if (survey.welcomeMessage) {\n      speakText(survey.welcomeMessage, () => {\n        // Después de la bienvenida, preguntar la primera pregunta\n        speakCurrentQuestion();\n      });\n    } else {\n      // Si no hay mensaje de bienvenida, ir directamente a la primera pregunta\n      speakCurrentQuestion();\n    }\n  };\n\n  // Función para hablar el texto usando el servicio de audio con pausas naturales\n  const speakText = (text, onEndCallback) => {\n    if (!voiceEnabled) {\n      if (onEndCallback) onEndCallback();\n      return;\n    }\n    console.log('Preparando para hablar:', text);\n\n    // Cancela cualquier síntesis en curso y limpia los timeouts anteriores\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    if (speakTimeoutRef.current) {\n      clearTimeout(speakTimeoutRef.current);\n      speakTimeoutRef.current = null;\n    }\n\n    // Detener cualquier reconocimiento en curso para evitar conflictos\n    audioService.stop();\n\n    // Pausa significativa antes de comenzar a hablar (1 segundo)\n    speakTimeoutRef.current = setTimeout(() => {\n      setConversationState('speaking');\n      setConversationMessage('Hablando: ' + text.substring(0, 30) + (text.length > 30 ? '...' : ''));\n\n      // Calcular un tiempo estimado basado en la longitud del texto (125ms por carácter para ser más conservador)\n      const estimatedSpeakTime = Math.max(4000, text.length * 125);\n      console.log(`Tiempo estimado para hablar: ${estimatedSpeakTime}ms`);\n      audioService.speakText(text, () => {\n        console.log('Comenzando a hablar:', text);\n      }, () => {\n        console.log('Terminó de hablar la frase completa');\n        setConversationState('processing');\n        setConversationMessage('Procesando...');\n\n        // Esperar un tiempo más largo después de hablar (2 segundos) para una pausa natural\n        // Esta pausa simula el tiempo que una persona tomaría para procesar lo que escuchó\n        speakTimeoutRef.current = setTimeout(() => {\n          setConversationState('idle');\n          if (onEndCallback) {\n            onEndCallback();\n          }\n        }, 2000);\n      }, error => {\n        console.error('Error al hablar:', error);\n        setConversationState('error');\n        setConversationMessage(`Error: ${error}`);\n\n        // En caso de error, esperar un poco antes de continuar\n        speakTimeoutRef.current = setTimeout(() => {\n          setConversationState('idle');\n          if (onEndCallback) {\n            onEndCallback();\n          }\n        }, 1500);\n      });\n    }, 1000); // Esperar 1 segundo antes de iniciar una nueva síntesis para asegurar separación clara\n  };\n\n  // Función para hablar la pregunta actual\n  const speakCurrentQuestion = () => {\n    if (!survey || !voiceEnabled) return;\n    const currentQuestion = survey.questions[currentQuestionIndex];\n    if (!currentQuestion) return;\n    let questionText = `Pregunta ${currentQuestionIndex + 1}: ${currentQuestion.text}`;\n\n    // Agregar información sobre opciones si es pregunta de opción múltiple\n    if (currentQuestion.type === 'multiple_choice' && currentQuestion.options) {\n      questionText += '. Las opciones son: ';\n      questionText += currentQuestion.options.map((option, idx) => `Opción ${idx + 1}: ${option}`).join(', ');\n    }\n    speakText(questionText, () => {\n      // Después de hablar la pregunta, iniciar el reconocimiento de voz\n      startListening();\n    });\n  };\n\n  // Función para iniciar la escucha de la respuesta del usuario\n  const startListening = async () => {\n    if (!voiceEnabled) return;\n    if (!audioService.isSupportedByBrowser()) {\n      setError('Tu navegador no soporta reconocimiento de voz');\n      return;\n    }\n    if (micPermission !== 'granted') {\n      await requestMicrophonePermission();\n      return;\n    }\n    audioService.init('es-ES');\n    setRecognizedText('');\n    audioService.onResult((transcript, isFinal) => {\n      setCurrentResponse(transcript);\n      setStatus(isFinal ? 'Procesando...' : 'Escuchando...');\n    });\n    audioService.onEnd(finalTranscript => {\n      setIsListening(false);\n      setConversationState('processing');\n      setConversationMessage('Procesando respuesta...');\n\n      // Guardar la respuesta y continuar la conversación\n      handleVoiceResponse(finalTranscript);\n    });\n    audioService.onError(errorMessage => {\n      console.error('Error de reconocimiento:', errorMessage);\n      setError(`Error de reconocimiento: ${errorMessage}`);\n      setIsListening(false);\n      setConversationState('idle');\n\n      // Reintentar la escucha después de un error\n      speakTimeoutRef.current = setTimeout(() => {\n        speakText('No pude entender tu respuesta. Por favor, inténtalo de nuevo.', () => {\n          startListening();\n        });\n      }, 1000);\n    });\n    try {\n      const started = await audioService.start();\n      if (started) {\n        setIsListening(true);\n        setConversationState('listening');\n        setConversationMessage('Escuchando...');\n      } else {\n        setError('No se pudo iniciar el reconocimiento de voz');\n        setConversationState('idle');\n      }\n    } catch (error) {\n      setError(`Error al iniciar reconocimiento: ${error.message || 'Error desconocido'}`);\n      setConversationState('idle');\n    }\n  };\n\n  // Manejar la respuesta por voz\n  const handleVoiceResponse = response => {\n    if (!response || response.trim() === '') {\n      // Si no hay respuesta, pedir que repita\n      speakText('No he escuchado ninguna respuesta. Por favor, intenta de nuevo.', () => {\n        startListening();\n      });\n      return;\n    }\n\n    // Guardar la respuesta actual\n    const updatedResponses = [...responses];\n    updatedResponses[currentQuestionIndex] = response;\n    setResponses(updatedResponses);\n\n    // Dar feedback al usuario\n    speakText(`He registrado tu respuesta: ${response}.`, () => {\n      // Pasar a la siguiente pregunta o finalizar\n      if (currentQuestionIndex < survey.questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setCurrentResponse('');\n        // Hablar la siguiente pregunta después de un breve pausa\n        speakTimeoutRef.current = setTimeout(() => {\n          speakCurrentQuestion();\n        }, 1000);\n      } else {\n        // Si es la última pregunta, mostrar confirmación\n        setShowConfirmation(true);\n        speakText('Hemos terminado todas las preguntas. Ahora te mostraré un resumen de tus respuestas para que las confirmes.', () => {\n          speakConfirmationSummary();\n        });\n      }\n    });\n  };\n\n  // Leer el resumen de confirmación\n  const speakConfirmationSummary = () => {\n    if (!voiceEnabled || !showConfirmation) return;\n    let summaryText = 'Resumen de tus respuestas: ';\n    survey.questions.forEach((question, index) => {\n      summaryText += `Pregunta ${index + 1}: ${question.text}. Tu respuesta: ${responses[index] || \"Sin respuesta\"}. `;\n    });\n    summaryText += '¿Deseas enviar estas respuestas o volver para revisar alguna?';\n    speakText(summaryText, () => {\n      // Escuchar confirmación del usuario\n      listenForConfirmation();\n    });\n  };\n\n  // Escuchar la confirmación del usuario usando NLP para mejor reconocimiento\n  const listenForConfirmation = () => {\n    if (!voiceEnabled) return;\n\n    // Esperar un momento antes de empezar a escuchar para dar tiempo a que termine de hablar\n    // y para simular un ritmo de conversación natural\n    setConversationState('waiting');\n    setConversationMessage('Esperando tu respuesta...');\n\n    // Esperar 3 segundos antes de empezar a escuchar para una interacción más natural\n    setTimeout(() => {\n      audioService.init('es-ES');\n      audioService.onResult((transcript, isFinal) => {\n        // Mostrar lo que está diciendo el usuario en tiempo real\n        setCurrentResponse(transcript);\n        setConversationMessage(isFinal ? 'Procesando tu respuesta...' : `Escuchando: ${transcript}`);\n      });\n      audioService.onEnd(finalTranscript => {\n        setIsListening(false);\n        setConversationState('processing');\n        setConversationMessage('Analizando respuesta...');\n        console.log('Respuesta final recibida:', finalTranscript);\n\n        // Usar una pausa para procesar la respuesta y dar una sensación más natural\n        setTimeout(() => {\n          // Analizar respuesta utilizando NLP para una mejor comprensión\n          try {\n            // Procesar con NLP para detectar intenciones de confirmación o rechazo\n            const doc = nlp(finalTranscript.toLowerCase());\n\n            // Extraer palabras clave para determinar intención\n            const hasConfirmation = doc.has('sí') || doc.has('si') || doc.has('confirmar') || doc.has('enviar') || doc.has('aceptar') || doc.has('ok') || doc.has('está bien') || doc.has('de acuerdo');\n            const hasRejection = doc.has('no') || doc.has('volver') || doc.has('revisar') || doc.has('regresar') || doc.has('editar') || doc.has('cambiar');\n            console.log('Análisis NLP:', {\n              hasConfirmation,\n              hasRejection\n            });\n            if (hasConfirmation) {\n              // Confirmado - enviar respuestas\n              setConversationState('confirmed');\n              setConversationMessage('Confirmado. Enviando respuestas...');\n              speakText('Perfecto, estoy enviando tus respuestas ahora.', () => {\n                handleSubmit();\n              });\n            } else if (hasRejection) {\n              // Volver a revisar\n              setConversationState('reviewing');\n              setConversationMessage('Volviendo a revisar las preguntas...');\n              setShowConfirmation(false);\n              speakText('De acuerdo, volvamos a revisar las preguntas. Puedes navegar entre ellas usando los botones de anterior y siguiente.', null);\n            } else {\n              // Respuesta no clara - pedir clarificación\n              setConversationState('unclear');\n              setConversationMessage('No entendí tu respuesta...');\n              speakText('No he entendido si deseas confirmar o revisar. Por favor, dime claramente \"confirmar\" para enviar las respuestas o \"revisar\" para volver a las preguntas.', () => {\n                // Intentar nuevamente después de una pausa \n                setTimeout(() => {\n                  listenForConfirmation();\n                }, 2000); // Esperar 2 segundos antes de volver a escuchar\n              });\n            }\n          } catch (error) {\n            console.error('Error al procesar la respuesta con NLP:', error);\n            // Fallback al método simple en caso de error con NLP\n            const lowerResponse = finalTranscript.toLowerCase();\n            if (lowerResponse.includes('sí') || lowerResponse.includes('si') || lowerResponse.includes('confirmar') || lowerResponse.includes('enviar')) {\n              speakText('Perfecto, enviando tus respuestas.', () => {\n                handleSubmit();\n              });\n            } else if (lowerResponse.includes('no') || lowerResponse.includes('revisar')) {\n              setShowConfirmation(false);\n              speakText('De acuerdo, volvamos a revisar las preguntas.', null);\n            } else {\n              speakText('No he entendido tu respuesta. Por favor, intenta de nuevo.', () => {\n                setTimeout(() => {\n                  listenForConfirmation();\n                }, 2000);\n              });\n            }\n          }\n        }, 1500); // Pausa para procesar la respuesta\n      });\n      audioService.onError(errorMessage => {\n        console.error('Error en reconocimiento de voz:', errorMessage);\n        setIsListening(false);\n        setConversationState('error');\n        setConversationMessage(`Error al escuchar: ${errorMessage}`);\n        speakText('Hubo un problema al escuchar tu confirmación. Por favor, usa los botones en pantalla para confirmar o volver, o intenta hablar más claramente.', null);\n      });\n\n      // Iniciar el reconocimiento de voz\n      audioService.start();\n      setIsListening(true);\n      setConversationState('listening');\n      setConversationMessage('Escuchando tu confirmación...');\n\n      // Reproducir un sonido suave para indicar que está listo para escuchar\n      try {\n        const beep = new Audio('/assets/sounds/listen-beep.mp3');\n        beep.volume = 0.3;\n        beep.play();\n      } catch (error) {\n        console.log('No se pudo reproducir el sonido de inicio de escucha');\n      }\n    }, 3000); // Pausa considerable antes de empezar a escuchar\n  };\n\n  // Manejar el cambio de respuesta manual\n  const handleResponseChange = e => {\n    setCurrentResponse(e.target.value);\n  };\n\n  // Guardar la respuesta actual y avanzar a la siguiente pregunta manualmente\n  const handleNextQuestion = () => {\n    // Cancelar cualquier síntesis o reconocimiento en curso\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    audioService.stop();\n    const updatedResponses = [...responses];\n    updatedResponses[currentQuestionIndex] = currentResponse;\n    setResponses(updatedResponses);\n    if (currentQuestionIndex < survey.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setCurrentResponse('');\n\n      // Si está habilitada la voz, hablar la siguiente pregunta\n      if (voiceEnabled) {\n        speakTimeoutRef.current = setTimeout(() => {\n          speakCurrentQuestion();\n        }, 500);\n      }\n    } else {\n      setShowConfirmation(true);\n      if (voiceEnabled) {\n        speakText('Hemos terminado todas las preguntas. Ahora te mostraré un resumen de tus respuestas para que las confirmes.', () => {\n          speakConfirmationSummary();\n        });\n      }\n    }\n  };\n\n  // Volver a la pregunta anterior manualmente\n  const handlePreviousQuestion = () => {\n    // Cancelar cualquier síntesis o reconocimiento en curso\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    audioService.stop();\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n      setCurrentResponse(responses[currentQuestionIndex - 1]);\n\n      // Si está habilitada la voz, hablar la pregunta anterior\n      if (voiceEnabled) {\n        speakTimeoutRef.current = setTimeout(() => {\n          speakCurrentQuestion();\n        }, 500);\n      }\n    }\n  };\n\n  // Enviar todas las respuestas\n  const handleSubmit = async () => {\n    setIsSubmitting(true);\n    try {\n      // Preparar objeto de respuesta\n      const responseData = {\n        surveyId: survey._id,\n        responses: survey.questions.map((question, index) => ({\n          questionId: question._id,\n          questionText: question.text,\n          responseText: responses[index] || '',\n          questionType: question.type\n        }))\n      };\n\n      // Enviar respuesta a la API\n      await ResponseService.submitResponse(responseData);\n\n      // Mensaje de despedida\n      if (voiceEnabled) {\n        speakText(survey.farewell || '¡Gracias por completar la encuesta!', () => {\n          // Redirigir a página de agradecimiento\n          navigate(`/thank-you`, {\n            state: {\n              message: survey.farewell || '¡Gracias por completar la encuesta!'\n            }\n          });\n        });\n      } else {\n        // Redirigir a página de agradecimiento sin hablar\n        navigate(`/thank-you`, {\n          state: {\n            message: survey.farewell || '¡Gracias por completar la encuesta!'\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error al enviar respuestas:', error);\n      setError('Ocurrió un error al enviar tus respuestas. Por favor, intenta nuevamente.');\n      setIsSubmitting(false);\n      if (voiceEnabled) {\n        speakText('Ha ocurrido un error al enviar tus respuestas. Por favor, intenta nuevamente.', null);\n      }\n    }\n  };\n\n  // Iniciar reconocimiento de voz manual\n  const startVoiceRecognition = () => {\n    if (isListening) return;\n\n    // Cancelar cualquier síntesis en curso\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    startListening();\n  };\n\n  // Detener reconocimiento de voz manual\n  const stopVoiceRecognition = () => {\n    audioService.stop();\n    setIsListening(false);\n    setConversationState('idle');\n  };\n\n  // Alternar el uso de voz\n  const toggleVoice = () => {\n    // Cancelar cualquier síntesis o reconocimiento en curso\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    audioService.stop();\n    const newVoiceEnabled = !voiceEnabled;\n    setVoiceEnabled(newVoiceEnabled);\n    if (newVoiceEnabled && !conversationActive.current) {\n      // Si se activa la voz, iniciar conversación\n      conversationActive.current = false; // Reset para que startConversation funcione\n      startConversation();\n    }\n  };\n\n  // Renderizar pantalla de carga\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Renderizar mensaje de error\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no hay encuesta\n  if (!survey) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: \"No se encontr\\xF3 la encuesta solicitada.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Obtener la pregunta actual\n  const currentQuestion = survey.questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVoice,\n        className: `px-3 py-1 rounded text-sm ${voiceEnabled ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700'}`,\n        children: voiceEnabled ? '🔊 Voz Activada' : '🔇 Voz Desactivada'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this), showPermissionDialog && micPermission === 'unknown' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-xl p-6 max-w-md mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4 text-center\",\n          children: \"Permiso para usar el micr\\xF3fono\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: \"Esta encuesta utiliza reconocimiento de voz para una experiencia m\\xE1s natural. Para continuar, necesitamos tu permiso para acceder al micr\\xF3fono.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-3 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: requestMicrophonePermission,\n            className: \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center justify-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              viewBox: \"0 0 20 20\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                fillRule: \"evenodd\",\n                d: \"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\",\n                clipRule: \"evenodd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this), \"Permitir micr\\xF3fono\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowPermissionDialog(false);\n              setVoiceEnabled(false);\n              setMicPermission('denied');\n            },\n            className: \"px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300\",\n            children: \"Continuar sin voz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 9\n    }, this), voiceEnabled && conversationState !== 'idle' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mb-4 p-3 rounded-lg shadow-sm text-center ${conversationState === 'speaking' ? 'bg-blue-100 text-blue-700' : conversationState === 'listening' ? 'bg-green-100 text-green-700' : conversationState === 'requesting_permission' ? 'bg-purple-100 text-purple-700' : conversationState === 'permission_denied' ? 'bg-red-100 text-red-700' : 'bg-yellow-100 text-yellow-700'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold flex items-center justify-center gap-2\",\n        children: [conversationState === 'speaking' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-flex justify-center items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"h-2 w-2 bg-blue-600 rounded-full animate-ping mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"h-2 w-2 bg-blue-600 rounded-full animate-ping mx-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"h-2 w-2 bg-blue-600 rounded-full animate-ping ml-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 15\n        }, this), conversationState === 'listening' && /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5 animate-pulse\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 15\n        }, this), conversationMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 11\n      }, this), isListening && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2 text-green-700\",\n        children: \"Escuch\\xE1ndote... habla claramente cuando escuches el tono.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 9\n    }, this), micPermission === 'denied' && voiceEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-3 rounded-lg bg-red-50 border border-red-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-700 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5 mr-2\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 13\n        }, this), \"Se necesita acceso al micr\\xF3fono para usar la funcionalidad de voz.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 flex justify-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: requestMicrophonePermission,\n          className: \"text-sm px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700\",\n          children: \"Reintentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setVoiceEnabled(false),\n          className: \"text-sm px-3 py-1 bg-gray-200 text-gray-700 rounded hover:bg-gray-300 ml-2\",\n          children: \"Continuar sin voz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-2\",\n        children: survey.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: survey.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 9\n      }, this), currentQuestionIndex === 0 && survey.welcomeMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 bg-blue-50 rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: survey.welcomeMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-gray-200 rounded-full h-2.5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-600 h-2.5 rounded-full\",\n          style: {\n            width: `${(currentQuestionIndex + 1) / survey.questions.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-right text-sm mt-1\",\n        children: [\"Pregunta \", currentQuestionIndex + 1, \" de \", survey.questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 7\n    }, this), showConfirmation ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Confirmar env\\xEDo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-4\",\n        children: \"\\xBFEst\\xE1s seguro de que deseas enviar tus respuestas?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mb-2\",\n          children: \"Resumen de respuestas:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 13\n        }, this), survey.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium\",\n            children: [index + 1, \". \", question.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 pl-4\",\n            children: responses[index] || \"(Sin respuesta)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 17\n          }, this)]\n        }, question._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 11\n      }, this), isListening && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-100 p-3 rounded mb-4 animate-pulse\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-green-800\",\n          children: \"\\uD83C\\uDFA4 Di \\\"confirmar\\\" para enviar o \\\"revisar\\\" para volver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 15\n        }, this), currentResponse && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm italic text-center mt-1\",\n          children: [\"\\\"\", currentResponse, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowConfirmation(false);\n            if (voiceEnabled) {\n              speakText('Volvamos a revisar las preguntas.', null);\n            }\n          },\n          className: \"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300\",\n          disabled: isSubmitting,\n          children: \"Volver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\",\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Enviando...' : 'Confirmar envío'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: currentQuestion.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 13\n        }, this), currentQuestion.type === 'multiple_choice' && currentQuestion.options && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 mb-2\",\n            children: \"Opciones:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc pl-5\",\n            children: currentQuestion.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"mb-1\",\n              children: option\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Tu respuesta:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: currentResponse,\n            onChange: handleResponseChange,\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n            rows: \"3\",\n            placeholder: \"Escribe tu respuesta...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mt-2\",\n            children: [voiceEnabled && micPermission === 'granted' && !isListening ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startVoiceRecognition,\n              className: \"flex items-center px-3 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 843,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 21\n              }, this), \"Responder por voz\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 19\n            }, this) : voiceEnabled && micPermission === 'granted' && isListening ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: stopVoiceRecognition,\n              className: \"flex items-center px-3 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 shadow-sm animate-pulse\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1V8a1 1 0 00-1-1H8z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 853,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 21\n              }, this), \"Detener grabaci\\xF3n\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 848,\n              columnNumber: 19\n            }, this) : voiceEnabled && micPermission === 'unknown' ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: requestMicrophonePermission,\n              className: \"flex items-center px-3 py-2 bg-purple-500 text-white rounded-md hover:bg-purple-600 shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 863,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 21\n              }, this), \"Permitir micr\\xF3fono\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 19\n            }, this) : voiceEnabled && micPermission === 'denied' ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: requestMicrophonePermission,\n              className: \"flex items-center px-3 py-2 bg-red-100 text-red-700 rounded-md hover:bg-red-200 shadow-sm border border-red-300\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M13.477 14.89A6 6 0 015.11 6.524l8.367 8.368zm1.414-1.414L6.524 5.11a6 6 0 018.367 8.367zM18 10a8 8 0 11-16 0 8 8 0 0116 0z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 873,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 21\n              }, this), \"Micr\\xF3fono bloqueado\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setVoiceEnabled(true);\n                requestMicrophonePermission();\n              },\n              className: \"flex items-center px-3 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 21\n              }, this), \"Activar modo voz\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 19\n            }, this), isListening && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-green-600 flex items-center animate-pulse\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"w-2 h-2 bg-green-600 rounded-full mr-1 animate-ping\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 894,\n                columnNumber: 21\n              }, this), \"Escuchando...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreviousQuestion,\n          disabled: currentQuestionIndex === 0,\n          className: `px-4 py-2 rounded ${currentQuestionIndex === 0 ? 'bg-gray-200 text-gray-400 cursor-not-allowed' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n          children: currentQuestionIndex < survey.questions.length - 1 ? 'Siguiente' : 'Finalizar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 631,\n    columnNumber: 5\n  }, this);\n};\n_s(TakeSurvey, \"/Q0DyABdRa+LNpr9Mnmxkw4ETzI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TakeSurvey;\nexport default TakeSurvey;\nvar _c;\n$RefreshReg$(_c, \"TakeSurvey\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","SurveyService","ResponseService","LoadingSpinner","ErrorMessage","audioService","nlpService","jsxDEV","_jsxDEV","Fragment","_Fragment","TakeSurvey","_s","surveyId","navigate","conversationActive","speakTimeoutRef","survey","setSurvey","loading","setLoading","error","setError","currentQuestionIndex","setCurrentQuestionIndex","responses","setResponses","isSubmitting","setIsSubmitting","showConfirmation","setShowConfirmation","currentResponse","setCurrentResponse","isListening","setIsListening","voiceEnabled","setVoiceEnabled","conversationState","setConversationState","conversationMessage","setConversationMessage","micPermission","setMicPermission","recognizedText","setRecognizedText","status","setStatus","showPermissionDialog","setShowPermissionDialog","requestMicrophonePermission","permissionGranted","setTimeout","startConversation","console","fetchSurvey","data","getPublicSurvey","log","Array","questions","length","fill","initSpeechSystem","onPermissionChange","granted","errorMsg","current","clearTimeout","stop","window","speechSynthesis","cancel","welcomeMessage","speakText","speakCurrentQuestion","text","onEndCallback","substring","estimatedSpeakTime","Math","max","currentQuestion","questionText","type","options","map","option","idx","join","startListening","isSupportedByBrowser","init","onResult","transcript","isFinal","onEnd","finalTranscript","handleVoiceResponse","onError","errorMessage","started","start","message","response","trim","updatedResponses","speakConfirmationSummary","summaryText","forEach","question","index","listenForConfirmation","doc","nlp","toLowerCase","hasConfirmation","has","hasRejection","handleSubmit","lowerResponse","includes","beep","Audio","volume","play","handleResponseChange","e","target","value","handleNextQuestion","handlePreviousQuestion","responseData","_id","questionId","responseText","questionType","submitResponse","farewell","state","startVoiceRecognition","stopVoiceRecognition","toggleVoice","newVoiceEnabled","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","xmlns","viewBox","fillRule","d","clipRule","title","description","style","width","disabled","onChange","rows","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/josep/Documents/Sistema de Encuestas por Voz/client/src/pages/TakeSurvey.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { SurveyService, ResponseService } from '../services/apiService';\n\n// Componentes\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport ErrorMessage from '../components/ErrorMessage';\nimport audioService from '../services/audioService';\n// Importar servicio de procesamiento de lenguaje natural\nimport * as nlpService from '../services/nlpService';\n\nconst TakeSurvey = () => {\n  const { surveyId } = useParams();\n  const navigate = useNavigate();\n  \n  // Referencias para controlar el flujo de la conversación\n  const conversationActive = useRef(false);\n  const speakTimeoutRef = useRef(null);\n  \n  // Estados\n  const [survey, setSurvey] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [responses, setResponses] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [voiceEnabled, setVoiceEnabled] = useState(true);\n  const [conversationState, setConversationState] = useState('idle'); // idle, speaking, listening, processing\n  const [conversationMessage, setConversationMessage] = useState('');\n  const [micPermission, setMicPermission] = useState('unknown'); // 'unknown', 'granted', 'denied'\n  const [recognizedText, setRecognizedText] = useState('');\n  const [status, setStatus] = useState('');\n  const [showPermissionDialog, setShowPermissionDialog] = useState(false);\n  \n  // Verificar permiso del micrófono\n  const requestMicrophonePermission = async () => {\n    setConversationState('requesting_permission');\n    setConversationMessage('Solicitando permiso para el micrófono...');\n    \n    try {\n      const permissionGranted = await audioService.requestMicrophonePermission();\n      \n      if (permissionGranted) {\n        setMicPermission('granted');\n        setShowPermissionDialog(false);\n        setConversationMessage('Permiso concedido. Iniciando encuesta por voz...');\n        \n        // Pequeño retraso para iniciar la conversación\n        setTimeout(() => {\n          startConversation();\n        }, 1000);\n      } else {\n        setMicPermission('denied');\n        setConversationState('permission_denied');\n        setConversationMessage('Se necesita acceso al micrófono para usar la función de voz');\n      }\n    } catch (error) {\n      console.error('Error al solicitar permiso:', error);\n      setMicPermission('denied');\n      setConversationState('error');\n      setConversationMessage('Error al solicitar permiso del micrófono');\n    }\n  };\n\n  // Cargar la encuesta\n  useEffect(() => {\n    const fetchSurvey = async () => {\n      try {\n        const data = await SurveyService.getPublicSurvey(surveyId);\n        console.log('Encuesta cargada:', data);\n        setSurvey(data);\n        // Inicializar respuestas vacías\n        setResponses(new Array(data.questions.length).fill(''));\n      } catch (error) {\n        console.error('Error al cargar la encuesta:', error);\n        setError('No se pudo cargar la encuesta. Verifique que el ID sea correcto y que la encuesta esté activa.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchSurvey();\n    \n    // Inicializar sistema de voz\n    audioService.initSpeechSystem();\n    \n    // Configurar el callback para cambios en el permiso del micrófono\n    audioService.onPermissionChange((granted, errorMsg) => {\n      setMicPermission(granted ? 'granted' : 'denied');\n      if (!granted && errorMsg) {\n        setConversationMessage(`Error de permiso: ${errorMsg}`);\n        setConversationState('permission_denied');\n      }\n    });\n    \n    return () => {\n      // Detener cualquier síntesis y reconocimiento al desmontar\n      if (speakTimeoutRef.current) {\n        clearTimeout(speakTimeoutRef.current);\n      }\n      audioService.stop();\n      conversationActive.current = false;\n      \n      if (window.speechSynthesis) {\n        window.speechSynthesis.cancel();\n      }\n    };\n  }, [surveyId]);\n  \n  // Iniciar la conversación una vez que la encuesta esté cargada\n  useEffect(() => {\n    if (survey && voiceEnabled && !conversationActive.current) {\n      // Primero verificar permiso de micrófono\n      if (micPermission === 'granted') {\n        startConversation();\n      } else if (micPermission === 'unknown') {\n        // Mostrar diálogo de permiso\n        setShowPermissionDialog(true);\n      }\n    }\n  }, [survey, voiceEnabled, micPermission]);\n  \n  // Función para iniciar la conversación\n  const startConversation = () => {\n    if (!voiceEnabled || !survey) return;\n    \n    conversationActive.current = true;\n    \n    // Dar un mensaje de bienvenida\n    if (survey.welcomeMessage) {\n      speakText(survey.welcomeMessage, () => {\n        // Después de la bienvenida, preguntar la primera pregunta\n        speakCurrentQuestion();\n      });\n    } else {\n      // Si no hay mensaje de bienvenida, ir directamente a la primera pregunta\n      speakCurrentQuestion();\n    }\n  };\n  \n  // Función para hablar el texto usando el servicio de audio con pausas naturales\n  const speakText = (text, onEndCallback) => {\n    if (!voiceEnabled) {\n      if (onEndCallback) onEndCallback();\n      return;\n    }\n    \n    console.log('Preparando para hablar:', text);\n    \n    // Cancela cualquier síntesis en curso y limpia los timeouts anteriores\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    \n    if (speakTimeoutRef.current) {\n      clearTimeout(speakTimeoutRef.current);\n      speakTimeoutRef.current = null;\n    }\n    \n    // Detener cualquier reconocimiento en curso para evitar conflictos\n    audioService.stop();\n    \n    // Pausa significativa antes de comenzar a hablar (1 segundo)\n    speakTimeoutRef.current = setTimeout(() => {\n      setConversationState('speaking');\n      setConversationMessage('Hablando: ' + text.substring(0, 30) + (text.length > 30 ? '...' : ''));\n      \n      // Calcular un tiempo estimado basado en la longitud del texto (125ms por carácter para ser más conservador)\n      const estimatedSpeakTime = Math.max(4000, text.length * 125);\n      console.log(`Tiempo estimado para hablar: ${estimatedSpeakTime}ms`);\n      \n      audioService.speakText(\n        text,\n        () => {\n          console.log('Comenzando a hablar:', text);\n        },\n        () => {\n          console.log('Terminó de hablar la frase completa');\n          setConversationState('processing');\n          setConversationMessage('Procesando...');\n          \n          // Esperar un tiempo más largo después de hablar (2 segundos) para una pausa natural\n          // Esta pausa simula el tiempo que una persona tomaría para procesar lo que escuchó\n          speakTimeoutRef.current = setTimeout(() => {\n            setConversationState('idle');\n            if (onEndCallback) {\n              onEndCallback();\n            }\n          }, 2000);\n        },\n        (error) => {\n          console.error('Error al hablar:', error);\n          setConversationState('error');\n          setConversationMessage(`Error: ${error}`);\n          \n          // En caso de error, esperar un poco antes de continuar\n          speakTimeoutRef.current = setTimeout(() => {\n            setConversationState('idle');\n            if (onEndCallback) {\n              onEndCallback();\n            }\n          }, 1500);\n        }\n      );\n    }, 1000); // Esperar 1 segundo antes de iniciar una nueva síntesis para asegurar separación clara\n  };\n  \n  // Función para hablar la pregunta actual\n  const speakCurrentQuestion = () => {\n    if (!survey || !voiceEnabled) return;\n    \n    const currentQuestion = survey.questions[currentQuestionIndex];\n    if (!currentQuestion) return;\n    \n    let questionText = `Pregunta ${currentQuestionIndex + 1}: ${currentQuestion.text}`;\n    \n    // Agregar información sobre opciones si es pregunta de opción múltiple\n    if (currentQuestion.type === 'multiple_choice' && currentQuestion.options) {\n      questionText += '. Las opciones son: ';\n      questionText += currentQuestion.options.map((option, idx) => \n        `Opción ${idx + 1}: ${option}`\n      ).join(', ');\n    }\n    \n    speakText(questionText, () => {\n      // Después de hablar la pregunta, iniciar el reconocimiento de voz\n      startListening();\n    });\n  };\n  \n  // Función para iniciar la escucha de la respuesta del usuario\n  const startListening = async () => {\n    if (!voiceEnabled) return;\n    \n    if (!audioService.isSupportedByBrowser()) {\n      setError('Tu navegador no soporta reconocimiento de voz');\n      return;\n    }\n    \n    if (micPermission !== 'granted') {\n      await requestMicrophonePermission();\n      return;\n    }\n    \n    audioService.init('es-ES');\n    \n    setRecognizedText('');\n    \n    audioService.onResult((transcript, isFinal) => {\n      setCurrentResponse(transcript);\n      setStatus(isFinal ? 'Procesando...' : 'Escuchando...');\n    });\n    \n    audioService.onEnd((finalTranscript) => {\n      setIsListening(false);\n      setConversationState('processing');\n      setConversationMessage('Procesando respuesta...');\n      \n      // Guardar la respuesta y continuar la conversación\n      handleVoiceResponse(finalTranscript);\n    });\n    \n    audioService.onError((errorMessage) => {\n      console.error('Error de reconocimiento:', errorMessage);\n      setError(`Error de reconocimiento: ${errorMessage}`);\n      setIsListening(false);\n      setConversationState('idle');\n      \n      // Reintentar la escucha después de un error\n      speakTimeoutRef.current = setTimeout(() => {\n        speakText('No pude entender tu respuesta. Por favor, inténtalo de nuevo.', () => {\n          startListening();\n        });\n      }, 1000);\n    });\n    \n    try {\n      const started = await audioService.start();\n      if (started) {\n        setIsListening(true);\n        setConversationState('listening');\n        setConversationMessage('Escuchando...');\n      } else {\n        setError('No se pudo iniciar el reconocimiento de voz');\n        setConversationState('idle');\n      }\n    } catch (error) {\n      setError(`Error al iniciar reconocimiento: ${error.message || 'Error desconocido'}`);\n      setConversationState('idle');\n    }\n  };\n  \n  // Manejar la respuesta por voz\n  const handleVoiceResponse = (response) => {\n    if (!response || response.trim() === '') {\n      // Si no hay respuesta, pedir que repita\n      speakText('No he escuchado ninguna respuesta. Por favor, intenta de nuevo.', () => {\n        startListening();\n      });\n      return;\n    }\n    \n    // Guardar la respuesta actual\n    const updatedResponses = [...responses];\n    updatedResponses[currentQuestionIndex] = response;\n    setResponses(updatedResponses);\n    \n    // Dar feedback al usuario\n    speakText(`He registrado tu respuesta: ${response}.`, () => {\n      // Pasar a la siguiente pregunta o finalizar\n      if (currentQuestionIndex < survey.questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setCurrentResponse('');\n        // Hablar la siguiente pregunta después de un breve pausa\n        speakTimeoutRef.current = setTimeout(() => {\n          speakCurrentQuestion();\n        }, 1000);\n      } else {\n        // Si es la última pregunta, mostrar confirmación\n        setShowConfirmation(true);\n        speakText('Hemos terminado todas las preguntas. Ahora te mostraré un resumen de tus respuestas para que las confirmes.', () => {\n          speakConfirmationSummary();\n        });\n      }\n    });\n  };\n  \n  // Leer el resumen de confirmación\n  const speakConfirmationSummary = () => {\n    if (!voiceEnabled || !showConfirmation) return;\n    \n    let summaryText = 'Resumen de tus respuestas: ';\n    \n    survey.questions.forEach((question, index) => {\n      summaryText += `Pregunta ${index + 1}: ${question.text}. Tu respuesta: ${responses[index] || \"Sin respuesta\"}. `;\n    });\n    \n    summaryText += '¿Deseas enviar estas respuestas o volver para revisar alguna?';\n    \n    speakText(summaryText, () => {\n      // Escuchar confirmación del usuario\n      listenForConfirmation();\n    });\n  };\n  \n  // Escuchar la confirmación del usuario usando NLP para mejor reconocimiento\n  const listenForConfirmation = () => {\n    if (!voiceEnabled) return;\n    \n    // Esperar un momento antes de empezar a escuchar para dar tiempo a que termine de hablar\n    // y para simular un ritmo de conversación natural\n    setConversationState('waiting');\n    setConversationMessage('Esperando tu respuesta...');\n    \n    // Esperar 3 segundos antes de empezar a escuchar para una interacción más natural\n    setTimeout(() => {\n      audioService.init('es-ES');\n      \n      audioService.onResult((transcript, isFinal) => {\n        // Mostrar lo que está diciendo el usuario en tiempo real\n        setCurrentResponse(transcript);\n        setConversationMessage(isFinal ? 'Procesando tu respuesta...' : `Escuchando: ${transcript}`);\n      });\n      \n      audioService.onEnd((finalTranscript) => {\n        setIsListening(false);\n        setConversationState('processing');\n        setConversationMessage('Analizando respuesta...');\n        \n        console.log('Respuesta final recibida:', finalTranscript);\n        \n        // Usar una pausa para procesar la respuesta y dar una sensación más natural\n        setTimeout(() => {\n          // Analizar respuesta utilizando NLP para una mejor comprensión\n          try {\n            // Procesar con NLP para detectar intenciones de confirmación o rechazo\n            const doc = nlp(finalTranscript.toLowerCase());\n            \n            // Extraer palabras clave para determinar intención\n            const hasConfirmation = doc.has('sí') || doc.has('si') || doc.has('confirmar') || \n                                  doc.has('enviar') || doc.has('aceptar') || doc.has('ok') ||\n                                  doc.has('está bien') || doc.has('de acuerdo');\n                                  \n            const hasRejection = doc.has('no') || doc.has('volver') || doc.has('revisar') ||\n                              doc.has('regresar') || doc.has('editar') || doc.has('cambiar');\n            \n            console.log('Análisis NLP:', { hasConfirmation, hasRejection });\n            \n            if (hasConfirmation) {\n              // Confirmado - enviar respuestas\n              setConversationState('confirmed');\n              setConversationMessage('Confirmado. Enviando respuestas...');\n              \n              speakText('Perfecto, estoy enviando tus respuestas ahora.', () => {\n                handleSubmit();\n              });\n            } else if (hasRejection) {\n              // Volver a revisar\n              setConversationState('reviewing');\n              setConversationMessage('Volviendo a revisar las preguntas...');\n              \n              setShowConfirmation(false);\n              speakText('De acuerdo, volvamos a revisar las preguntas. Puedes navegar entre ellas usando los botones de anterior y siguiente.', null);\n            } else {\n              // Respuesta no clara - pedir clarificación\n              setConversationState('unclear');\n              setConversationMessage('No entendí tu respuesta...');\n              \n              speakText('No he entendido si deseas confirmar o revisar. Por favor, dime claramente \"confirmar\" para enviar las respuestas o \"revisar\" para volver a las preguntas.', () => {\n                // Intentar nuevamente después de una pausa \n                setTimeout(() => {\n                  listenForConfirmation();\n                }, 2000); // Esperar 2 segundos antes de volver a escuchar\n              });\n            }\n          } catch (error) {\n            console.error('Error al procesar la respuesta con NLP:', error);\n            // Fallback al método simple en caso de error con NLP\n            const lowerResponse = finalTranscript.toLowerCase();\n            \n            if (lowerResponse.includes('sí') || lowerResponse.includes('si') || \n                lowerResponse.includes('confirmar') || lowerResponse.includes('enviar')) {\n              speakText('Perfecto, enviando tus respuestas.', () => {\n                handleSubmit();\n              });\n            } else if (lowerResponse.includes('no') || lowerResponse.includes('revisar')) {\n              setShowConfirmation(false);\n              speakText('De acuerdo, volvamos a revisar las preguntas.', null);\n            } else {\n              speakText('No he entendido tu respuesta. Por favor, intenta de nuevo.', () => {\n                setTimeout(() => {\n                  listenForConfirmation();\n                }, 2000);\n              });\n            }\n          }\n        }, 1500); // Pausa para procesar la respuesta\n      });\n      \n      audioService.onError((errorMessage) => {\n        console.error('Error en reconocimiento de voz:', errorMessage);\n        setIsListening(false);\n        setConversationState('error');\n        setConversationMessage(`Error al escuchar: ${errorMessage}`);\n        \n        speakText('Hubo un problema al escuchar tu confirmación. Por favor, usa los botones en pantalla para confirmar o volver, o intenta hablar más claramente.', null);\n      });\n      \n      // Iniciar el reconocimiento de voz\n      audioService.start();\n      setIsListening(true);\n      setConversationState('listening');\n      setConversationMessage('Escuchando tu confirmación...');\n      \n      // Reproducir un sonido suave para indicar que está listo para escuchar\n      try {\n        const beep = new Audio('/assets/sounds/listen-beep.mp3');\n        beep.volume = 0.3;\n        beep.play();\n      } catch (error) {\n        console.log('No se pudo reproducir el sonido de inicio de escucha');\n      }\n    }, 3000); // Pausa considerable antes de empezar a escuchar\n  };\n  \n  // Manejar el cambio de respuesta manual\n  const handleResponseChange = (e) => {\n    setCurrentResponse(e.target.value);\n  };\n  \n  // Guardar la respuesta actual y avanzar a la siguiente pregunta manualmente\n  const handleNextQuestion = () => {\n    // Cancelar cualquier síntesis o reconocimiento en curso\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    audioService.stop();\n    \n    const updatedResponses = [...responses];\n    updatedResponses[currentQuestionIndex] = currentResponse;\n    setResponses(updatedResponses);\n    \n    if (currentQuestionIndex < survey.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setCurrentResponse('');\n      \n      // Si está habilitada la voz, hablar la siguiente pregunta\n      if (voiceEnabled) {\n        speakTimeoutRef.current = setTimeout(() => {\n          speakCurrentQuestion();\n        }, 500);\n      }\n    } else {\n      setShowConfirmation(true);\n      if (voiceEnabled) {\n        speakText('Hemos terminado todas las preguntas. Ahora te mostraré un resumen de tus respuestas para que las confirmes.', () => {\n          speakConfirmationSummary();\n        });\n      }\n    }\n  };\n  \n  // Volver a la pregunta anterior manualmente\n  const handlePreviousQuestion = () => {\n    // Cancelar cualquier síntesis o reconocimiento en curso\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    audioService.stop();\n    \n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n      setCurrentResponse(responses[currentQuestionIndex - 1]);\n      \n      // Si está habilitada la voz, hablar la pregunta anterior\n      if (voiceEnabled) {\n        speakTimeoutRef.current = setTimeout(() => {\n          speakCurrentQuestion();\n        }, 500);\n      }\n    }\n  };\n  \n  // Enviar todas las respuestas\n  const handleSubmit = async () => {\n    setIsSubmitting(true);\n    \n    try {\n      // Preparar objeto de respuesta\n      const responseData = {\n        surveyId: survey._id,\n        responses: survey.questions.map((question, index) => ({\n          questionId: question._id,\n          questionText: question.text,\n          responseText: responses[index] || '',\n          questionType: question.type\n        }))\n      };\n      \n      // Enviar respuesta a la API\n      await ResponseService.submitResponse(responseData);\n      \n      // Mensaje de despedida\n      if (voiceEnabled) {\n        speakText(survey.farewell || '¡Gracias por completar la encuesta!', () => {\n          // Redirigir a página de agradecimiento\n          navigate(`/thank-you`, { \n            state: { \n              message: survey.farewell || '¡Gracias por completar la encuesta!' \n            } \n          });\n        });\n      } else {\n        // Redirigir a página de agradecimiento sin hablar\n        navigate(`/thank-you`, { \n          state: { \n            message: survey.farewell || '¡Gracias por completar la encuesta!' \n          } \n        });\n      }\n    } catch (error) {\n      console.error('Error al enviar respuestas:', error);\n      setError('Ocurrió un error al enviar tus respuestas. Por favor, intenta nuevamente.');\n      setIsSubmitting(false);\n      \n      if (voiceEnabled) {\n        speakText('Ha ocurrido un error al enviar tus respuestas. Por favor, intenta nuevamente.', null);\n      }\n    }\n  };\n  \n  // Iniciar reconocimiento de voz manual\n  const startVoiceRecognition = () => {\n    if (isListening) return;\n    \n    // Cancelar cualquier síntesis en curso\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    \n    startListening();\n  };\n  \n  // Detener reconocimiento de voz manual\n  const stopVoiceRecognition = () => {\n    audioService.stop();\n    setIsListening(false);\n    setConversationState('idle');\n  };\n  \n  // Alternar el uso de voz\n  const toggleVoice = () => {\n    // Cancelar cualquier síntesis o reconocimiento en curso\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    audioService.stop();\n    \n    const newVoiceEnabled = !voiceEnabled;\n    setVoiceEnabled(newVoiceEnabled);\n    \n    if (newVoiceEnabled && !conversationActive.current) {\n      // Si se activa la voz, iniciar conversación\n      conversationActive.current = false; // Reset para que startConversation funcione\n      startConversation();\n    }\n  };\n  \n  // Renderizar pantalla de carga\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n  \n  // Renderizar mensaje de error\n  if (error) {\n    return <ErrorMessage message={error} />;\n  }\n  \n  // Si no hay encuesta\n  if (!survey) {\n    return <ErrorMessage message=\"No se encontró la encuesta solicitada.\" />;\n  }\n  \n  // Obtener la pregunta actual\n  const currentQuestion = survey.questions[currentQuestionIndex];\n  \n  return (\n    <div className=\"max-w-3xl mx-auto p-4\">\n      {/* Control de voz */}\n      <div className=\"flex justify-end mb-2\">\n        <button \n          onClick={toggleVoice} \n          className={`px-3 py-1 rounded text-sm ${voiceEnabled ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700'}`}\n        >\n          {voiceEnabled ? '🔊 Voz Activada' : '🔇 Voz Desactivada'}\n        </button>\n      </div>\n      \n      {/* Diálogo de permisos del micrófono */}\n      {showPermissionDialog && micPermission === 'unknown' && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl p-6 max-w-md mx-auto\">\n            <h2 className=\"text-xl font-bold mb-4 text-center\">Permiso para usar el micrófono</h2>\n            <p className=\"mb-4\">\n              Esta encuesta utiliza reconocimiento de voz para una experiencia más natural. \n              Para continuar, necesitamos tu permiso para acceder al micrófono.\n            </p>\n            <div className=\"flex flex-col gap-3 mt-6\">\n              <button\n                onClick={requestMicrophonePermission}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center justify-center gap-2\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\" clipRule=\"evenodd\" />\n                </svg>\n                Permitir micrófono\n              </button>\n              <button\n                onClick={() => {\n                  setShowPermissionDialog(false);\n                  setVoiceEnabled(false);\n                  setMicPermission('denied');\n                }}\n                className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300\"\n              >\n                Continuar sin voz\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Estado de la conversación */}\n      {voiceEnabled && conversationState !== 'idle' && (\n        <div className={`mb-4 p-3 rounded-lg shadow-sm text-center ${\n          conversationState === 'speaking' ? 'bg-blue-100 text-blue-700' : \n          conversationState === 'listening' ? 'bg-green-100 text-green-700' : \n          conversationState === 'requesting_permission' ? 'bg-purple-100 text-purple-700' :\n          conversationState === 'permission_denied' ? 'bg-red-100 text-red-700' :\n          'bg-yellow-100 text-yellow-700'\n        }`}>\n          <p className=\"font-semibold flex items-center justify-center gap-2\">\n            {conversationState === 'speaking' && (\n              <span className=\"inline-flex justify-center items-center\">\n                <span className=\"h-2 w-2 bg-blue-600 rounded-full animate-ping mr-1\"></span>\n                <span className=\"h-2 w-2 bg-blue-600 rounded-full animate-ping mx-1\"></span>\n                <span className=\"h-2 w-2 bg-blue-600 rounded-full animate-ping ml-1\"></span>\n              </span>\n            )}\n            {conversationState === 'listening' && (\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 animate-pulse\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\" clipRule=\"evenodd\" />\n              </svg>\n            )}\n            {conversationMessage}\n          </p>\n          {isListening && (\n            <p className=\"text-sm mt-2 text-green-700\">Escuchándote... habla claramente cuando escuches el tono.</p>\n          )}\n        </div>\n      )}\n      \n      {/* Mensaje de error de permisos */}\n      {micPermission === 'denied' && voiceEnabled && (\n        <div className=\"mb-4 p-3 rounded-lg bg-red-50 border border-red-200\">\n          <p className=\"text-red-700 flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n            </svg>\n            Se necesita acceso al micrófono para usar la funcionalidad de voz.\n          </p>\n          <div className=\"mt-2 flex justify-end\">\n            <button \n              onClick={requestMicrophonePermission}\n              className=\"text-sm px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700\"\n            >\n              Reintentar\n            </button>\n            <button \n              onClick={() => setVoiceEnabled(false)}\n              className=\"text-sm px-3 py-1 bg-gray-200 text-gray-700 rounded hover:bg-gray-300 ml-2\"\n            >\n              Continuar sin voz\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {/* Encabezado de la encuesta */}\n      <div className=\"mb-8 text-center\">\n        <h1 className=\"text-3xl font-bold mb-2\">{survey.title}</h1>\n        <p className=\"text-gray-600\">{survey.description}</p>\n        {currentQuestionIndex === 0 && survey.welcomeMessage && (\n          <div className=\"mt-4 p-4 bg-blue-50 rounded-lg\">\n            <p>{survey.welcomeMessage}</p>\n          </div>\n        )}\n      </div>\n      \n      {/* Progreso */}\n      <div className=\"mb-6\">\n        <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n          <div \n            className=\"bg-blue-600 h-2.5 rounded-full\" \n            style={{ width: `${((currentQuestionIndex + 1) / survey.questions.length) * 100}%` }}\n          ></div>\n        </div>\n        <p className=\"text-right text-sm mt-1\">\n          Pregunta {currentQuestionIndex + 1} de {survey.questions.length}\n        </p>\n      </div>\n      \n      {/* Pantalla de confirmación */}\n      {showConfirmation ? (\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\n          <h2 className=\"text-2xl font-bold mb-4\">Confirmar envío</h2>\n          <p className=\"mb-4\">¿Estás seguro de que deseas enviar tus respuestas?</p>\n          \n          <div className=\"mb-6\">\n            <h3 className=\"font-bold mb-2\">Resumen de respuestas:</h3>\n            {survey.questions.map((question, index) => (\n              <div key={question._id} className=\"mb-3\">\n                <p className=\"font-medium\">{index + 1}. {question.text}</p>\n                <p className=\"text-gray-700 pl-4\">{responses[index] || \"(Sin respuesta)\"}</p>\n              </div>\n            ))}\n          </div>\n          \n          {isListening && (\n            <div className=\"bg-green-100 p-3 rounded mb-4 animate-pulse\">\n              <p className=\"text-center text-green-800\">\n                🎤 Di \"confirmar\" para enviar o \"revisar\" para volver\n              </p>\n              {currentResponse && (\n                <p className=\"text-sm italic text-center mt-1\">\"{currentResponse}\"</p>\n              )}\n            </div>\n          )}\n          \n          <div className=\"flex justify-between\">\n            <button\n              onClick={() => {\n                setShowConfirmation(false);\n                if (voiceEnabled) {\n                  speakText('Volvamos a revisar las preguntas.', null);\n                }\n              }}\n              className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300\"\n              disabled={isSubmitting}\n            >\n              Volver\n            </button>\n            <button\n              onClick={handleSubmit}\n              className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? 'Enviando...' : 'Confirmar envío'}\n            </button>\n          </div>\n        </div>      ) : (\n        <>\n          {/* Pregunta actual */}\n          <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n            <h2 className=\"text-xl font-bold mb-4\">{currentQuestion.text}</h2>\n            \n            {/* Opciones para preguntas de tipo opción */}\n            {currentQuestion.type === 'multiple_choice' && currentQuestion.options && (\n              <div className=\"mb-4\">\n                <p className=\"text-sm text-gray-600 mb-2\">Opciones:</p>\n                <ul className=\"list-disc pl-5\">\n                  {currentQuestion.options.map((option, idx) => (\n                    <li key={idx} className=\"mb-1\">{option}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            \n            {/* Área de respuesta */}\n            <div className=\"mt-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Tu respuesta:\n              </label>\n              <textarea\n                value={currentResponse}\n                onChange={handleResponseChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                rows=\"3\"\n                placeholder=\"Escribe tu respuesta...\"\n              ></textarea>\n              \n              {/* Controles de reconocimiento de voz */}\n              <div className=\"flex items-center mt-2\">\n                {voiceEnabled && micPermission === 'granted' && !isListening ? (\n                  <button\n                    onClick={startVoiceRecognition}\n                    className=\"flex items-center px-3 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 shadow-sm\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\" clipRule=\"evenodd\" />\n                    </svg>\n                    Responder por voz\n                  </button>\n                ) : voiceEnabled && micPermission === 'granted' && isListening ? (\n                  <button\n                    onClick={stopVoiceRecognition}\n                    className=\"flex items-center px-3 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 shadow-sm animate-pulse\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1V8a1 1 0 00-1-1H8z\" clipRule=\"evenodd\" />\n                    </svg>\n                    Detener grabación\n                  </button>\n                ) : voiceEnabled && micPermission === 'unknown' ? (\n                  <button\n                    onClick={requestMicrophonePermission}\n                    className=\"flex items-center px-3 py-2 bg-purple-500 text-white rounded-md hover:bg-purple-600 shadow-sm\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path d=\"M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z\" />\n                    </svg>\n                    Permitir micrófono\n                  </button>\n                ) : voiceEnabled && micPermission === 'denied' ? (\n                  <button\n                    onClick={requestMicrophonePermission}\n                    className=\"flex items-center px-3 py-2 bg-red-100 text-red-700 rounded-md hover:bg-red-200 shadow-sm border border-red-300\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M13.477 14.89A6 6 0 015.11 6.524l8.367 8.368zm1.414-1.414L6.524 5.11a6 6 0 018.367 8.367zM18 10a8 8 0 11-16 0 8 8 0 0116 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                    Micrófono bloqueado\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => {\n                      setVoiceEnabled(true);\n                      requestMicrophonePermission();\n                    }}\n                    className=\"flex items-center px-3 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 shadow-sm\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\" clipRule=\"evenodd\" />\n                    </svg>\n                    Activar modo voz\n                  </button>\n                )}\n                \n                {isListening && (\n                  <span className=\"ml-2 text-green-600 flex items-center animate-pulse\">\n                    <span className=\"w-2 h-2 bg-green-600 rounded-full mr-1 animate-ping\"></span>\n                    Escuchando...\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n          \n          {/* Botones de navegación */}\n          <div className=\"flex justify-between\">\n            <button\n              onClick={handlePreviousQuestion}\n              disabled={currentQuestionIndex === 0}\n              className={`px-4 py-2 rounded ${\n                currentQuestionIndex === 0\n                  ? 'bg-gray-200 text-gray-400 cursor-not-allowed'\n                  : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\n              }`}\n            >\n              Anterior\n            </button>\n            \n            <button\n              onClick={handleNextQuestion}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n            >\n              {currentQuestionIndex < survey.questions.length - 1 ? 'Siguiente' : 'Finalizar'}\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TakeSurvey;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,aAAa,EAAEC,eAAe,QAAQ,wBAAwB;;AAEvE;AACA,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,YAAY,MAAM,0BAA0B;AACnD;AACA,OAAO,KAAKC,UAAU,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAS,CAAC,GAAGd,SAAS,CAAC,CAAC;EAChC,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMe,kBAAkB,GAAGjB,MAAM,CAAC,KAAK,CAAC;EACxC,MAAMkB,eAAe,GAAGlB,MAAM,CAAC,IAAI,CAAC;;EAEpC;EACA,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC2B,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACiC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACmC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACyC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1C,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EACpE,MAAM,CAAC2C,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC6C,aAAa,EAAEC,gBAAgB,CAAC,GAAG9C,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EAC/D,MAAM,CAAC+C,cAAc,EAAEC,iBAAiB,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiD,MAAM,EAAEC,SAAS,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmD,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;;EAEvE;EACA,MAAMqD,2BAA2B,GAAG,MAAAA,CAAA,KAAY;IAC9CX,oBAAoB,CAAC,uBAAuB,CAAC;IAC7CE,sBAAsB,CAAC,0CAA0C,CAAC;IAElE,IAAI;MACF,MAAMU,iBAAiB,GAAG,MAAM7C,YAAY,CAAC4C,2BAA2B,CAAC,CAAC;MAE1E,IAAIC,iBAAiB,EAAE;QACrBR,gBAAgB,CAAC,SAAS,CAAC;QAC3BM,uBAAuB,CAAC,KAAK,CAAC;QAC9BR,sBAAsB,CAAC,kDAAkD,CAAC;;QAE1E;QACAW,UAAU,CAAC,MAAM;UACfC,iBAAiB,CAAC,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,MAAM;QACLV,gBAAgB,CAAC,QAAQ,CAAC;QAC1BJ,oBAAoB,CAAC,mBAAmB,CAAC;QACzCE,sBAAsB,CAAC,6DAA6D,CAAC;MACvF;IACF,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACdgC,OAAO,CAAChC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDqB,gBAAgB,CAAC,QAAQ,CAAC;MAC1BJ,oBAAoB,CAAC,OAAO,CAAC;MAC7BE,sBAAsB,CAAC,0CAA0C,CAAC;IACpE;EACF,CAAC;;EAED;EACA3C,SAAS,CAAC,MAAM;IACd,MAAMyD,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMtD,aAAa,CAACuD,eAAe,CAAC3C,QAAQ,CAAC;QAC1DwC,OAAO,CAACI,GAAG,CAAC,mBAAmB,EAAEF,IAAI,CAAC;QACtCrC,SAAS,CAACqC,IAAI,CAAC;QACf;QACA7B,YAAY,CAAC,IAAIgC,KAAK,CAACH,IAAI,CAACI,SAAS,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;MACzD,CAAC,CAAC,OAAOxC,KAAK,EAAE;QACdgC,OAAO,CAAChC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDC,QAAQ,CAAC,gGAAgG,CAAC;MAC5G,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDkC,WAAW,CAAC,CAAC;;IAEb;IACAjD,YAAY,CAACyD,gBAAgB,CAAC,CAAC;;IAE/B;IACAzD,YAAY,CAAC0D,kBAAkB,CAAC,CAACC,OAAO,EAAEC,QAAQ,KAAK;MACrDvB,gBAAgB,CAACsB,OAAO,GAAG,SAAS,GAAG,QAAQ,CAAC;MAChD,IAAI,CAACA,OAAO,IAAIC,QAAQ,EAAE;QACxBzB,sBAAsB,CAAC,qBAAqByB,QAAQ,EAAE,CAAC;QACvD3B,oBAAoB,CAAC,mBAAmB,CAAC;MAC3C;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACX;MACA,IAAItB,eAAe,CAACkD,OAAO,EAAE;QAC3BC,YAAY,CAACnD,eAAe,CAACkD,OAAO,CAAC;MACvC;MACA7D,YAAY,CAAC+D,IAAI,CAAC,CAAC;MACnBrD,kBAAkB,CAACmD,OAAO,GAAG,KAAK;MAElC,IAAIG,MAAM,CAACC,eAAe,EAAE;QAC1BD,MAAM,CAACC,eAAe,CAACC,MAAM,CAAC,CAAC;MACjC;IACF,CAAC;EACH,CAAC,EAAE,CAAC1D,QAAQ,CAAC,CAAC;;EAEd;EACAhB,SAAS,CAAC,MAAM;IACd,IAAIoB,MAAM,IAAIkB,YAAY,IAAI,CAACpB,kBAAkB,CAACmD,OAAO,EAAE;MACzD;MACA,IAAIzB,aAAa,KAAK,SAAS,EAAE;QAC/BW,iBAAiB,CAAC,CAAC;MACrB,CAAC,MAAM,IAAIX,aAAa,KAAK,SAAS,EAAE;QACtC;QACAO,uBAAuB,CAAC,IAAI,CAAC;MAC/B;IACF;EACF,CAAC,EAAE,CAAC/B,MAAM,EAAEkB,YAAY,EAAEM,aAAa,CAAC,CAAC;;EAEzC;EACA,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACjB,YAAY,IAAI,CAAClB,MAAM,EAAE;IAE9BF,kBAAkB,CAACmD,OAAO,GAAG,IAAI;;IAEjC;IACA,IAAIjD,MAAM,CAACuD,cAAc,EAAE;MACzBC,SAAS,CAACxD,MAAM,CAACuD,cAAc,EAAE,MAAM;QACrC;QACAE,oBAAoB,CAAC,CAAC;MACxB,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAA,oBAAoB,CAAC,CAAC;IACxB;EACF,CAAC;;EAED;EACA,MAAMD,SAAS,GAAGA,CAACE,IAAI,EAAEC,aAAa,KAAK;IACzC,IAAI,CAACzC,YAAY,EAAE;MACjB,IAAIyC,aAAa,EAAEA,aAAa,CAAC,CAAC;MAClC;IACF;IAEAvB,OAAO,CAACI,GAAG,CAAC,yBAAyB,EAAEkB,IAAI,CAAC;;IAE5C;IACA,IAAIN,MAAM,CAACC,eAAe,EAAE;MAC1BD,MAAM,CAACC,eAAe,CAACC,MAAM,CAAC,CAAC;IACjC;IAEA,IAAIvD,eAAe,CAACkD,OAAO,EAAE;MAC3BC,YAAY,CAACnD,eAAe,CAACkD,OAAO,CAAC;MACrClD,eAAe,CAACkD,OAAO,GAAG,IAAI;IAChC;;IAEA;IACA7D,YAAY,CAAC+D,IAAI,CAAC,CAAC;;IAEnB;IACApD,eAAe,CAACkD,OAAO,GAAGf,UAAU,CAAC,MAAM;MACzCb,oBAAoB,CAAC,UAAU,CAAC;MAChCE,sBAAsB,CAAC,YAAY,GAAGmC,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,IAAIF,IAAI,CAACf,MAAM,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC;;MAE9F;MACA,MAAMkB,kBAAkB,GAAGC,IAAI,CAACC,GAAG,CAAC,IAAI,EAAEL,IAAI,CAACf,MAAM,GAAG,GAAG,CAAC;MAC5DP,OAAO,CAACI,GAAG,CAAC,gCAAgCqB,kBAAkB,IAAI,CAAC;MAEnEzE,YAAY,CAACoE,SAAS,CACpBE,IAAI,EACJ,MAAM;QACJtB,OAAO,CAACI,GAAG,CAAC,sBAAsB,EAAEkB,IAAI,CAAC;MAC3C,CAAC,EACD,MAAM;QACJtB,OAAO,CAACI,GAAG,CAAC,qCAAqC,CAAC;QAClDnB,oBAAoB,CAAC,YAAY,CAAC;QAClCE,sBAAsB,CAAC,eAAe,CAAC;;QAEvC;QACA;QACAxB,eAAe,CAACkD,OAAO,GAAGf,UAAU,CAAC,MAAM;UACzCb,oBAAoB,CAAC,MAAM,CAAC;UAC5B,IAAIsC,aAAa,EAAE;YACjBA,aAAa,CAAC,CAAC;UACjB;QACF,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,EACAvD,KAAK,IAAK;QACTgC,OAAO,CAAChC,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;QACxCiB,oBAAoB,CAAC,OAAO,CAAC;QAC7BE,sBAAsB,CAAC,UAAUnB,KAAK,EAAE,CAAC;;QAEzC;QACAL,eAAe,CAACkD,OAAO,GAAGf,UAAU,CAAC,MAAM;UACzCb,oBAAoB,CAAC,MAAM,CAAC;UAC5B,IAAIsC,aAAa,EAAE;YACjBA,aAAa,CAAC,CAAC;UACjB;QACF,CAAC,EAAE,IAAI,CAAC;MACV,CACF,CAAC;IACH,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC;;EAED;EACA,MAAMF,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAACzD,MAAM,IAAI,CAACkB,YAAY,EAAE;IAE9B,MAAM8C,eAAe,GAAGhE,MAAM,CAAC0C,SAAS,CAACpC,oBAAoB,CAAC;IAC9D,IAAI,CAAC0D,eAAe,EAAE;IAEtB,IAAIC,YAAY,GAAG,YAAY3D,oBAAoB,GAAG,CAAC,KAAK0D,eAAe,CAACN,IAAI,EAAE;;IAElF;IACA,IAAIM,eAAe,CAACE,IAAI,KAAK,iBAAiB,IAAIF,eAAe,CAACG,OAAO,EAAE;MACzEF,YAAY,IAAI,sBAAsB;MACtCA,YAAY,IAAID,eAAe,CAACG,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,KACtD,UAAUA,GAAG,GAAG,CAAC,KAAKD,MAAM,EAC9B,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC;IACd;IAEAf,SAAS,CAACS,YAAY,EAAE,MAAM;MAC5B;MACAO,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACtD,YAAY,EAAE;IAEnB,IAAI,CAAC9B,YAAY,CAACqF,oBAAoB,CAAC,CAAC,EAAE;MACxCpE,QAAQ,CAAC,+CAA+C,CAAC;MACzD;IACF;IAEA,IAAImB,aAAa,KAAK,SAAS,EAAE;MAC/B,MAAMQ,2BAA2B,CAAC,CAAC;MACnC;IACF;IAEA5C,YAAY,CAACsF,IAAI,CAAC,OAAO,CAAC;IAE1B/C,iBAAiB,CAAC,EAAE,CAAC;IAErBvC,YAAY,CAACuF,QAAQ,CAAC,CAACC,UAAU,EAAEC,OAAO,KAAK;MAC7C9D,kBAAkB,CAAC6D,UAAU,CAAC;MAC9B/C,SAAS,CAACgD,OAAO,GAAG,eAAe,GAAG,eAAe,CAAC;IACxD,CAAC,CAAC;IAEFzF,YAAY,CAAC0F,KAAK,CAAEC,eAAe,IAAK;MACtC9D,cAAc,CAAC,KAAK,CAAC;MACrBI,oBAAoB,CAAC,YAAY,CAAC;MAClCE,sBAAsB,CAAC,yBAAyB,CAAC;;MAEjD;MACAyD,mBAAmB,CAACD,eAAe,CAAC;IACtC,CAAC,CAAC;IAEF3F,YAAY,CAAC6F,OAAO,CAAEC,YAAY,IAAK;MACrC9C,OAAO,CAAChC,KAAK,CAAC,0BAA0B,EAAE8E,YAAY,CAAC;MACvD7E,QAAQ,CAAC,4BAA4B6E,YAAY,EAAE,CAAC;MACpDjE,cAAc,CAAC,KAAK,CAAC;MACrBI,oBAAoB,CAAC,MAAM,CAAC;;MAE5B;MACAtB,eAAe,CAACkD,OAAO,GAAGf,UAAU,CAAC,MAAM;QACzCsB,SAAS,CAAC,+DAA+D,EAAE,MAAM;UAC/EgB,cAAc,CAAC,CAAC;QAClB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;IAEF,IAAI;MACF,MAAMW,OAAO,GAAG,MAAM/F,YAAY,CAACgG,KAAK,CAAC,CAAC;MAC1C,IAAID,OAAO,EAAE;QACXlE,cAAc,CAAC,IAAI,CAAC;QACpBI,oBAAoB,CAAC,WAAW,CAAC;QACjCE,sBAAsB,CAAC,eAAe,CAAC;MACzC,CAAC,MAAM;QACLlB,QAAQ,CAAC,6CAA6C,CAAC;QACvDgB,oBAAoB,CAAC,MAAM,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdC,QAAQ,CAAC,oCAAoCD,KAAK,CAACiF,OAAO,IAAI,mBAAmB,EAAE,CAAC;MACpFhE,oBAAoB,CAAC,MAAM,CAAC;IAC9B;EACF,CAAC;;EAED;EACA,MAAM2D,mBAAmB,GAAIM,QAAQ,IAAK;IACxC,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvC;MACA/B,SAAS,CAAC,iEAAiE,EAAE,MAAM;QACjFgB,cAAc,CAAC,CAAC;MAClB,CAAC,CAAC;MACF;IACF;;IAEA;IACA,MAAMgB,gBAAgB,GAAG,CAAC,GAAGhF,SAAS,CAAC;IACvCgF,gBAAgB,CAAClF,oBAAoB,CAAC,GAAGgF,QAAQ;IACjD7E,YAAY,CAAC+E,gBAAgB,CAAC;;IAE9B;IACAhC,SAAS,CAAC,+BAA+B8B,QAAQ,GAAG,EAAE,MAAM;MAC1D;MACA,IAAIhF,oBAAoB,GAAGN,MAAM,CAAC0C,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;QACtDpC,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;QACjDS,kBAAkB,CAAC,EAAE,CAAC;QACtB;QACAhB,eAAe,CAACkD,OAAO,GAAGf,UAAU,CAAC,MAAM;UACzCuB,oBAAoB,CAAC,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,MAAM;QACL;QACA5C,mBAAmB,CAAC,IAAI,CAAC;QACzB2C,SAAS,CAAC,6GAA6G,EAAE,MAAM;UAC7HiC,wBAAwB,CAAC,CAAC;QAC5B,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMA,wBAAwB,GAAGA,CAAA,KAAM;IACrC,IAAI,CAACvE,YAAY,IAAI,CAACN,gBAAgB,EAAE;IAExC,IAAI8E,WAAW,GAAG,6BAA6B;IAE/C1F,MAAM,CAAC0C,SAAS,CAACiD,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MAC5CH,WAAW,IAAI,YAAYG,KAAK,GAAG,CAAC,KAAKD,QAAQ,CAAClC,IAAI,mBAAmBlD,SAAS,CAACqF,KAAK,CAAC,IAAI,eAAe,IAAI;IAClH,CAAC,CAAC;IAEFH,WAAW,IAAI,+DAA+D;IAE9ElC,SAAS,CAACkC,WAAW,EAAE,MAAM;MAC3B;MACAI,qBAAqB,CAAC,CAAC;IACzB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMA,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAI,CAAC5E,YAAY,EAAE;;IAEnB;IACA;IACAG,oBAAoB,CAAC,SAAS,CAAC;IAC/BE,sBAAsB,CAAC,2BAA2B,CAAC;;IAEnD;IACAW,UAAU,CAAC,MAAM;MACf9C,YAAY,CAACsF,IAAI,CAAC,OAAO,CAAC;MAE1BtF,YAAY,CAACuF,QAAQ,CAAC,CAACC,UAAU,EAAEC,OAAO,KAAK;QAC7C;QACA9D,kBAAkB,CAAC6D,UAAU,CAAC;QAC9BrD,sBAAsB,CAACsD,OAAO,GAAG,4BAA4B,GAAG,eAAeD,UAAU,EAAE,CAAC;MAC9F,CAAC,CAAC;MAEFxF,YAAY,CAAC0F,KAAK,CAAEC,eAAe,IAAK;QACtC9D,cAAc,CAAC,KAAK,CAAC;QACrBI,oBAAoB,CAAC,YAAY,CAAC;QAClCE,sBAAsB,CAAC,yBAAyB,CAAC;QAEjDa,OAAO,CAACI,GAAG,CAAC,2BAA2B,EAAEuC,eAAe,CAAC;;QAEzD;QACA7C,UAAU,CAAC,MAAM;UACf;UACA,IAAI;YACF;YACA,MAAM6D,GAAG,GAAGC,GAAG,CAACjB,eAAe,CAACkB,WAAW,CAAC,CAAC,CAAC;;YAE9C;YACA,MAAMC,eAAe,GAAGH,GAAG,CAACI,GAAG,CAAC,IAAI,CAAC,IAAIJ,GAAG,CAACI,GAAG,CAAC,IAAI,CAAC,IAAIJ,GAAG,CAACI,GAAG,CAAC,WAAW,CAAC,IACxDJ,GAAG,CAACI,GAAG,CAAC,QAAQ,CAAC,IAAIJ,GAAG,CAACI,GAAG,CAAC,SAAS,CAAC,IAAIJ,GAAG,CAACI,GAAG,CAAC,IAAI,CAAC,IACxDJ,GAAG,CAACI,GAAG,CAAC,WAAW,CAAC,IAAIJ,GAAG,CAACI,GAAG,CAAC,YAAY,CAAC;YAEnE,MAAMC,YAAY,GAAGL,GAAG,CAACI,GAAG,CAAC,IAAI,CAAC,IAAIJ,GAAG,CAACI,GAAG,CAAC,QAAQ,CAAC,IAAIJ,GAAG,CAACI,GAAG,CAAC,SAAS,CAAC,IAC3DJ,GAAG,CAACI,GAAG,CAAC,UAAU,CAAC,IAAIJ,GAAG,CAACI,GAAG,CAAC,QAAQ,CAAC,IAAIJ,GAAG,CAACI,GAAG,CAAC,SAAS,CAAC;YAEhF/D,OAAO,CAACI,GAAG,CAAC,eAAe,EAAE;cAAE0D,eAAe;cAAEE;YAAa,CAAC,CAAC;YAE/D,IAAIF,eAAe,EAAE;cACnB;cACA7E,oBAAoB,CAAC,WAAW,CAAC;cACjCE,sBAAsB,CAAC,oCAAoC,CAAC;cAE5DiC,SAAS,CAAC,gDAAgD,EAAE,MAAM;gBAChE6C,YAAY,CAAC,CAAC;cAChB,CAAC,CAAC;YACJ,CAAC,MAAM,IAAID,YAAY,EAAE;cACvB;cACA/E,oBAAoB,CAAC,WAAW,CAAC;cACjCE,sBAAsB,CAAC,sCAAsC,CAAC;cAE9DV,mBAAmB,CAAC,KAAK,CAAC;cAC1B2C,SAAS,CAAC,sHAAsH,EAAE,IAAI,CAAC;YACzI,CAAC,MAAM;cACL;cACAnC,oBAAoB,CAAC,SAAS,CAAC;cAC/BE,sBAAsB,CAAC,4BAA4B,CAAC;cAEpDiC,SAAS,CAAC,2JAA2J,EAAE,MAAM;gBAC3K;gBACAtB,UAAU,CAAC,MAAM;kBACf4D,qBAAqB,CAAC,CAAC;gBACzB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;cACZ,CAAC,CAAC;YACJ;UACF,CAAC,CAAC,OAAO1F,KAAK,EAAE;YACdgC,OAAO,CAAChC,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;YAC/D;YACA,MAAMkG,aAAa,GAAGvB,eAAe,CAACkB,WAAW,CAAC,CAAC;YAEnD,IAAIK,aAAa,CAACC,QAAQ,CAAC,IAAI,CAAC,IAAID,aAAa,CAACC,QAAQ,CAAC,IAAI,CAAC,IAC5DD,aAAa,CAACC,QAAQ,CAAC,WAAW,CAAC,IAAID,aAAa,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;cAC3E/C,SAAS,CAAC,oCAAoC,EAAE,MAAM;gBACpD6C,YAAY,CAAC,CAAC;cAChB,CAAC,CAAC;YACJ,CAAC,MAAM,IAAIC,aAAa,CAACC,QAAQ,CAAC,IAAI,CAAC,IAAID,aAAa,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;cAC5E1F,mBAAmB,CAAC,KAAK,CAAC;cAC1B2C,SAAS,CAAC,+CAA+C,EAAE,IAAI,CAAC;YAClE,CAAC,MAAM;cACLA,SAAS,CAAC,4DAA4D,EAAE,MAAM;gBAC5EtB,UAAU,CAAC,MAAM;kBACf4D,qBAAqB,CAAC,CAAC;gBACzB,CAAC,EAAE,IAAI,CAAC;cACV,CAAC,CAAC;YACJ;UACF;QACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC;MAEF1G,YAAY,CAAC6F,OAAO,CAAEC,YAAY,IAAK;QACrC9C,OAAO,CAAChC,KAAK,CAAC,iCAAiC,EAAE8E,YAAY,CAAC;QAC9DjE,cAAc,CAAC,KAAK,CAAC;QACrBI,oBAAoB,CAAC,OAAO,CAAC;QAC7BE,sBAAsB,CAAC,sBAAsB2D,YAAY,EAAE,CAAC;QAE5D1B,SAAS,CAAC,gJAAgJ,EAAE,IAAI,CAAC;MACnK,CAAC,CAAC;;MAEF;MACApE,YAAY,CAACgG,KAAK,CAAC,CAAC;MACpBnE,cAAc,CAAC,IAAI,CAAC;MACpBI,oBAAoB,CAAC,WAAW,CAAC;MACjCE,sBAAsB,CAAC,+BAA+B,CAAC;;MAEvD;MACA,IAAI;QACF,MAAMiF,IAAI,GAAG,IAAIC,KAAK,CAAC,gCAAgC,CAAC;QACxDD,IAAI,CAACE,MAAM,GAAG,GAAG;QACjBF,IAAI,CAACG,IAAI,CAAC,CAAC;MACb,CAAC,CAAC,OAAOvG,KAAK,EAAE;QACdgC,OAAO,CAACI,GAAG,CAAC,sDAAsD,CAAC;MACrE;IACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC;;EAED;EACA,MAAMoE,oBAAoB,GAAIC,CAAC,IAAK;IAClC9F,kBAAkB,CAAC8F,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACA,IAAI5D,MAAM,CAACC,eAAe,EAAE;MAC1BD,MAAM,CAACC,eAAe,CAACC,MAAM,CAAC,CAAC;IACjC;IACAlE,YAAY,CAAC+D,IAAI,CAAC,CAAC;IAEnB,MAAMqC,gBAAgB,GAAG,CAAC,GAAGhF,SAAS,CAAC;IACvCgF,gBAAgB,CAAClF,oBAAoB,CAAC,GAAGQ,eAAe;IACxDL,YAAY,CAAC+E,gBAAgB,CAAC;IAE9B,IAAIlF,oBAAoB,GAAGN,MAAM,CAAC0C,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;MACtDpC,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;MACjDS,kBAAkB,CAAC,EAAE,CAAC;;MAEtB;MACA,IAAIG,YAAY,EAAE;QAChBnB,eAAe,CAACkD,OAAO,GAAGf,UAAU,CAAC,MAAM;UACzCuB,oBAAoB,CAAC,CAAC;QACxB,CAAC,EAAE,GAAG,CAAC;MACT;IACF,CAAC,MAAM;MACL5C,mBAAmB,CAAC,IAAI,CAAC;MACzB,IAAIK,YAAY,EAAE;QAChBsC,SAAS,CAAC,6GAA6G,EAAE,MAAM;UAC7HiC,wBAAwB,CAAC,CAAC;QAC5B,CAAC,CAAC;MACJ;IACF;EACF,CAAC;;EAED;EACA,MAAMwB,sBAAsB,GAAGA,CAAA,KAAM;IACnC;IACA,IAAI7D,MAAM,CAACC,eAAe,EAAE;MAC1BD,MAAM,CAACC,eAAe,CAACC,MAAM,CAAC,CAAC;IACjC;IACAlE,YAAY,CAAC+D,IAAI,CAAC,CAAC;IAEnB,IAAI7C,oBAAoB,GAAG,CAAC,EAAE;MAC5BC,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;MACjDS,kBAAkB,CAACP,SAAS,CAACF,oBAAoB,GAAG,CAAC,CAAC,CAAC;;MAEvD;MACA,IAAIY,YAAY,EAAE;QAChBnB,eAAe,CAACkD,OAAO,GAAGf,UAAU,CAAC,MAAM;UACzCuB,oBAAoB,CAAC,CAAC;QACxB,CAAC,EAAE,GAAG,CAAC;MACT;IACF;EACF,CAAC;;EAED;EACA,MAAM4C,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B1F,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACF;MACA,MAAMuG,YAAY,GAAG;QACnBtH,QAAQ,EAAEI,MAAM,CAACmH,GAAG;QACpB3G,SAAS,EAAER,MAAM,CAAC0C,SAAS,CAAC0B,GAAG,CAAC,CAACwB,QAAQ,EAAEC,KAAK,MAAM;UACpDuB,UAAU,EAAExB,QAAQ,CAACuB,GAAG;UACxBlD,YAAY,EAAE2B,QAAQ,CAAClC,IAAI;UAC3B2D,YAAY,EAAE7G,SAAS,CAACqF,KAAK,CAAC,IAAI,EAAE;UACpCyB,YAAY,EAAE1B,QAAQ,CAAC1B;QACzB,CAAC,CAAC;MACJ,CAAC;;MAED;MACA,MAAMjF,eAAe,CAACsI,cAAc,CAACL,YAAY,CAAC;;MAElD;MACA,IAAIhG,YAAY,EAAE;QAChBsC,SAAS,CAACxD,MAAM,CAACwH,QAAQ,IAAI,qCAAqC,EAAE,MAAM;UACxE;UACA3H,QAAQ,CAAC,YAAY,EAAE;YACrB4H,KAAK,EAAE;cACLpC,OAAO,EAAErF,MAAM,CAACwH,QAAQ,IAAI;YAC9B;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACA3H,QAAQ,CAAC,YAAY,EAAE;UACrB4H,KAAK,EAAE;YACLpC,OAAO,EAAErF,MAAM,CAACwH,QAAQ,IAAI;UAC9B;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOpH,KAAK,EAAE;MACdgC,OAAO,CAAChC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,QAAQ,CAAC,2EAA2E,CAAC;MACrFM,eAAe,CAAC,KAAK,CAAC;MAEtB,IAAIO,YAAY,EAAE;QAChBsC,SAAS,CAAC,+EAA+E,EAAE,IAAI,CAAC;MAClG;IACF;EACF,CAAC;;EAED;EACA,MAAMkE,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAI1G,WAAW,EAAE;;IAEjB;IACA,IAAIoC,MAAM,CAACC,eAAe,EAAE;MAC1BD,MAAM,CAACC,eAAe,CAACC,MAAM,CAAC,CAAC;IACjC;IAEAkB,cAAc,CAAC,CAAC;EAClB,CAAC;;EAED;EACA,MAAMmD,oBAAoB,GAAGA,CAAA,KAAM;IACjCvI,YAAY,CAAC+D,IAAI,CAAC,CAAC;IACnBlC,cAAc,CAAC,KAAK,CAAC;IACrBI,oBAAoB,CAAC,MAAM,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMuG,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,IAAIxE,MAAM,CAACC,eAAe,EAAE;MAC1BD,MAAM,CAACC,eAAe,CAACC,MAAM,CAAC,CAAC;IACjC;IACAlE,YAAY,CAAC+D,IAAI,CAAC,CAAC;IAEnB,MAAM0E,eAAe,GAAG,CAAC3G,YAAY;IACrCC,eAAe,CAAC0G,eAAe,CAAC;IAEhC,IAAIA,eAAe,IAAI,CAAC/H,kBAAkB,CAACmD,OAAO,EAAE;MAClD;MACAnD,kBAAkB,CAACmD,OAAO,GAAG,KAAK,CAAC,CAAC;MACpCd,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;;EAED;EACA,IAAIjC,OAAO,EAAE;IACX,oBAAOX,OAAA,CAACL,cAAc;MAAA4I,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3B;;EAEA;EACA,IAAI7H,KAAK,EAAE;IACT,oBAAOb,OAAA,CAACJ,YAAY;MAACkG,OAAO,EAAEjF;IAAM;MAAA0H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAI,CAACjI,MAAM,EAAE;IACX,oBAAOT,OAAA,CAACJ,YAAY;MAACkG,OAAO,EAAC;IAAwC;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1E;;EAEA;EACA,MAAMjE,eAAe,GAAGhE,MAAM,CAAC0C,SAAS,CAACpC,oBAAoB,CAAC;EAE9D,oBACEf,OAAA;IAAK2I,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAEpC5I,OAAA;MAAK2I,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eACpC5I,OAAA;QACE6I,OAAO,EAAER,WAAY;QACrBM,SAAS,EAAE,6BAA6BhH,YAAY,GAAG,wBAAwB,GAAG,2BAA2B,EAAG;QAAAiH,QAAA,EAE/GjH,YAAY,GAAG,iBAAiB,GAAG;MAAoB;QAAA4G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLnG,oBAAoB,IAAIN,aAAa,KAAK,SAAS,iBAClDjC,OAAA;MAAK2I,SAAS,EAAC,4EAA4E;MAAAC,QAAA,eACzF5I,OAAA;QAAK2I,SAAS,EAAC,oDAAoD;QAAAC,QAAA,gBACjE5I,OAAA;UAAI2I,SAAS,EAAC,oCAAoC;UAAAC,QAAA,EAAC;QAA8B;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtF1I,OAAA;UAAG2I,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAGpB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJ1I,OAAA;UAAK2I,SAAS,EAAC,0BAA0B;UAAAC,QAAA,gBACvC5I,OAAA;YACE6I,OAAO,EAAEpG,2BAA4B;YACrCkG,SAAS,EAAC,sGAAsG;YAAAC,QAAA,gBAEhH5I,OAAA;cAAK8I,KAAK,EAAC,4BAA4B;cAACH,SAAS,EAAC,SAAS;cAACI,OAAO,EAAC,WAAW;cAAC1F,IAAI,EAAC,cAAc;cAAAuF,QAAA,eACjG5I,OAAA;gBAAMgJ,QAAQ,EAAC,SAAS;gBAACC,CAAC,EAAC,uKAAuK;gBAACC,QAAQ,EAAC;cAAS;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrN,CAAC,yBAER;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT1I,OAAA;YACE6I,OAAO,EAAEA,CAAA,KAAM;cACbrG,uBAAuB,CAAC,KAAK,CAAC;cAC9BZ,eAAe,CAAC,KAAK,CAAC;cACtBM,gBAAgB,CAAC,QAAQ,CAAC;YAC5B,CAAE;YACFyG,SAAS,EAAC,kEAAkE;YAAAC,QAAA,EAC7E;UAED;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA/G,YAAY,IAAIE,iBAAiB,KAAK,MAAM,iBAC3C7B,OAAA;MAAK2I,SAAS,EAAE,6CACd9G,iBAAiB,KAAK,UAAU,GAAG,2BAA2B,GAC9DA,iBAAiB,KAAK,WAAW,GAAG,6BAA6B,GACjEA,iBAAiB,KAAK,uBAAuB,GAAG,+BAA+B,GAC/EA,iBAAiB,KAAK,mBAAmB,GAAG,yBAAyB,GACrE,+BAA+B,EAC9B;MAAA+G,QAAA,gBACD5I,OAAA;QAAG2I,SAAS,EAAC,sDAAsD;QAAAC,QAAA,GAChE/G,iBAAiB,KAAK,UAAU,iBAC/B7B,OAAA;UAAM2I,SAAS,EAAC,yCAAyC;UAAAC,QAAA,gBACvD5I,OAAA;YAAM2I,SAAS,EAAC;UAAoD;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5E1I,OAAA;YAAM2I,SAAS,EAAC;UAAoD;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5E1I,OAAA;YAAM2I,SAAS,EAAC;UAAoD;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CACP,EACA7G,iBAAiB,KAAK,WAAW,iBAChC7B,OAAA;UAAK8I,KAAK,EAAC,4BAA4B;UAACH,SAAS,EAAC,uBAAuB;UAACI,OAAO,EAAC,WAAW;UAAC1F,IAAI,EAAC,cAAc;UAAAuF,QAAA,eAC/G5I,OAAA;YAAMgJ,QAAQ,EAAC,SAAS;YAACC,CAAC,EAAC,uKAAuK;YAACC,QAAQ,EAAC;UAAS;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrN,CACN,EACA3G,mBAAmB;MAAA;QAAAwG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,EACHjH,WAAW,iBACVzB,OAAA;QAAG2I,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAAyD;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACxG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,EAGAzG,aAAa,KAAK,QAAQ,IAAIN,YAAY,iBACzC3B,OAAA;MAAK2I,SAAS,EAAC,qDAAqD;MAAAC,QAAA,gBAClE5I,OAAA;QAAG2I,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAC3C5I,OAAA;UAAK8I,KAAK,EAAC,4BAA4B;UAACH,SAAS,EAAC,cAAc;UAACI,OAAO,EAAC,WAAW;UAAC1F,IAAI,EAAC,cAAc;UAAAuF,QAAA,eACtG5I,OAAA;YAAMgJ,QAAQ,EAAC,SAAS;YAACC,CAAC,EAAC,mNAAmN;YAACC,QAAQ,EAAC;UAAS;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjQ,CAAC,yEAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJ1I,OAAA;QAAK2I,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpC5I,OAAA;UACE6I,OAAO,EAAEpG,2BAA4B;UACrCkG,SAAS,EAAC,kEAAkE;UAAAC,QAAA,EAC7E;QAED;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1I,OAAA;UACE6I,OAAO,EAAEA,CAAA,KAAMjH,eAAe,CAAC,KAAK,CAAE;UACtC+G,SAAS,EAAC,4EAA4E;UAAAC,QAAA,EACvF;QAED;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGD1I,OAAA;MAAK2I,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B5I,OAAA;QAAI2I,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAEnI,MAAM,CAAC0I;MAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3D1I,OAAA;QAAG2I,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEnI,MAAM,CAAC2I;MAAW;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpD3H,oBAAoB,KAAK,CAAC,IAAIN,MAAM,CAACuD,cAAc,iBAClDhE,OAAA;QAAK2I,SAAS,EAAC,gCAAgC;QAAAC,QAAA,eAC7C5I,OAAA;UAAA4I,QAAA,EAAInI,MAAM,CAACuD;QAAc;UAAAuE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGN1I,OAAA;MAAK2I,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB5I,OAAA;QAAK2I,SAAS,EAAC,uCAAuC;QAAAC,QAAA,eACpD5I,OAAA;UACE2I,SAAS,EAAC,gCAAgC;UAC1CU,KAAK,EAAE;YAAEC,KAAK,EAAE,GAAI,CAACvI,oBAAoB,GAAG,CAAC,IAAIN,MAAM,CAAC0C,SAAS,CAACC,MAAM,GAAI,GAAG;UAAI;QAAE;UAAAmF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACN1I,OAAA;QAAG2I,SAAS,EAAC,yBAAyB;QAAAC,QAAA,GAAC,WAC5B,EAAC7H,oBAAoB,GAAG,CAAC,EAAC,MAAI,EAACN,MAAM,CAAC0C,SAAS,CAACC,MAAM;MAAA;QAAAmF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAGLrH,gBAAgB,gBACfrB,OAAA;MAAK2I,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChD5I,OAAA;QAAI2I,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAAe;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5D1I,OAAA;QAAG2I,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAkD;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAE1E1I,OAAA;QAAK2I,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnB5I,OAAA;UAAI2I,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAsB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACzDjI,MAAM,CAAC0C,SAAS,CAAC0B,GAAG,CAAC,CAACwB,QAAQ,EAAEC,KAAK,kBACpCtG,OAAA;UAAwB2I,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACtC5I,OAAA;YAAG2I,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAEtC,KAAK,GAAG,CAAC,EAAC,IAAE,EAACD,QAAQ,CAAClC,IAAI;UAAA;YAAAoE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3D1I,OAAA;YAAG2I,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAE3H,SAAS,CAACqF,KAAK,CAAC,IAAI;UAAiB;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFrErC,QAAQ,CAACuB,GAAG;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGjB,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAELjH,WAAW,iBACVzB,OAAA;QAAK2I,SAAS,EAAC,6CAA6C;QAAAC,QAAA,gBAC1D5I,OAAA;UAAG2I,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAE1C;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EACHnH,eAAe,iBACdvB,OAAA;UAAG2I,SAAS,EAAC,iCAAiC;UAAAC,QAAA,GAAC,IAAC,EAACrH,eAAe,EAAC,IAAC;QAAA;UAAAgH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACtE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,eAED1I,OAAA;QAAK2I,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnC5I,OAAA;UACE6I,OAAO,EAAEA,CAAA,KAAM;YACbvH,mBAAmB,CAAC,KAAK,CAAC;YAC1B,IAAIK,YAAY,EAAE;cAChBsC,SAAS,CAAC,mCAAmC,EAAE,IAAI,CAAC;YACtD;UACF,CAAE;UACF0E,SAAS,EAAC,+DAA+D;UACzEY,QAAQ,EAAEpI,YAAa;UAAAyH,QAAA,EACxB;QAED;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1I,OAAA;UACE6I,OAAO,EAAE/B,YAAa;UACtB6B,SAAS,EAAC,8DAA8D;UACxEY,QAAQ,EAAEpI,YAAa;UAAAyH,QAAA,EAEtBzH,YAAY,GAAG,aAAa,GAAG;QAAiB;UAAAoH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBACN1I,OAAA,CAAAE,SAAA;MAAA0I,QAAA,gBAEE5I,OAAA;QAAK2I,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrD5I,OAAA;UAAI2I,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAEnE,eAAe,CAACN;QAAI;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAGjEjE,eAAe,CAACE,IAAI,KAAK,iBAAiB,IAAIF,eAAe,CAACG,OAAO,iBACpE5E,OAAA;UAAK2I,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnB5I,OAAA;YAAG2I,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EAAC;UAAS;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACvD1I,OAAA;YAAI2I,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC3BnE,eAAe,CAACG,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,kBACvC/E,OAAA;cAAc2I,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAE9D;YAAM,GAA7BC,GAAG;cAAAwD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA+B,CAC5C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACN,eAGD1I,OAAA;UAAK2I,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnB5I,OAAA;YAAO2I,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAC;UAEhE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR1I,OAAA;YACEwH,KAAK,EAAEjG,eAAgB;YACvBiI,QAAQ,EAAEnC,oBAAqB;YAC/BsB,SAAS,EAAC,2HAA2H;YACrIc,IAAI,EAAC,GAAG;YACRC,WAAW,EAAC;UAAyB;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eAGZ1I,OAAA;YAAK2I,SAAS,EAAC,wBAAwB;YAAAC,QAAA,GACpCjH,YAAY,IAAIM,aAAa,KAAK,SAAS,IAAI,CAACR,WAAW,gBAC1DzB,OAAA;cACE6I,OAAO,EAAEV,qBAAsB;cAC/BQ,SAAS,EAAC,2FAA2F;cAAAC,QAAA,gBAErG5I,OAAA;gBAAK8I,KAAK,EAAC,4BAA4B;gBAACH,SAAS,EAAC,cAAc;gBAACI,OAAO,EAAC,WAAW;gBAAC1F,IAAI,EAAC,cAAc;gBAAAuF,QAAA,eACtG5I,OAAA;kBAAMgJ,QAAQ,EAAC,SAAS;kBAACC,CAAC,EAAC,uKAAuK;kBAACC,QAAQ,EAAC;gBAAS;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrN,CAAC,qBAER;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,GACP/G,YAAY,IAAIM,aAAa,KAAK,SAAS,IAAIR,WAAW,gBAC5DzB,OAAA;cACE6I,OAAO,EAAET,oBAAqB;cAC9BO,SAAS,EAAC,uGAAuG;cAAAC,QAAA,gBAEjH5I,OAAA;gBAAK8I,KAAK,EAAC,4BAA4B;gBAACH,SAAS,EAAC,cAAc;gBAACI,OAAO,EAAC,WAAW;gBAAC1F,IAAI,EAAC,cAAc;gBAAAuF,QAAA,eACtG5I,OAAA;kBAAMgJ,QAAQ,EAAC,SAAS;kBAACC,CAAC,EAAC,kGAAkG;kBAACC,QAAQ,EAAC;gBAAS;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChJ,CAAC,wBAER;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,GACP/G,YAAY,IAAIM,aAAa,KAAK,SAAS,gBAC7CjC,OAAA;cACE6I,OAAO,EAAEpG,2BAA4B;cACrCkG,SAAS,EAAC,+FAA+F;cAAAC,QAAA,gBAEzG5I,OAAA;gBAAK8I,KAAK,EAAC,4BAA4B;gBAACH,SAAS,EAAC,cAAc;gBAACI,OAAO,EAAC,WAAW;gBAAC1F,IAAI,EAAC,cAAc;gBAAAuF,QAAA,eACtG5I,OAAA;kBAAMiJ,CAAC,EAAC;gBAAoI;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5I,CAAC,yBAER;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,GACP/G,YAAY,IAAIM,aAAa,KAAK,QAAQ,gBAC5CjC,OAAA;cACE6I,OAAO,EAAEpG,2BAA4B;cACrCkG,SAAS,EAAC,iHAAiH;cAAAC,QAAA,gBAE3H5I,OAAA;gBAAK8I,KAAK,EAAC,4BAA4B;gBAACH,SAAS,EAAC,cAAc;gBAACI,OAAO,EAAC,WAAW;gBAAC1F,IAAI,EAAC,cAAc;gBAAAuF,QAAA,eACtG5I,OAAA;kBAAMgJ,QAAQ,EAAC,SAAS;kBAACC,CAAC,EAAC,6HAA6H;kBAACC,QAAQ,EAAC;gBAAS;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3K,CAAC,0BAER;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gBAET1I,OAAA;cACE6I,OAAO,EAAEA,CAAA,KAAM;gBACbjH,eAAe,CAAC,IAAI,CAAC;gBACrBa,2BAA2B,CAAC,CAAC;cAC/B,CAAE;cACFkG,SAAS,EAAC,8FAA8F;cAAAC,QAAA,gBAExG5I,OAAA;gBAAK8I,KAAK,EAAC,4BAA4B;gBAACH,SAAS,EAAC,cAAc;gBAACI,OAAO,EAAC,WAAW;gBAAC1F,IAAI,EAAC,cAAc;gBAAAuF,QAAA,eACtG5I,OAAA;kBAAMgJ,QAAQ,EAAC,SAAS;kBAACC,CAAC,EAAC,uKAAuK;kBAACC,QAAQ,EAAC;gBAAS;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrN,CAAC,oBAER;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT,EAEAjH,WAAW,iBACVzB,OAAA;cAAM2I,SAAS,EAAC,qDAAqD;cAAAC,QAAA,gBACnE5I,OAAA;gBAAM2I,SAAS,EAAC;cAAqD;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,iBAE/E;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACP;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN1I,OAAA;QAAK2I,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnC5I,OAAA;UACE6I,OAAO,EAAEnB,sBAAuB;UAChC6B,QAAQ,EAAExI,oBAAoB,KAAK,CAAE;UACrC4H,SAAS,EAAE,qBACT5H,oBAAoB,KAAK,CAAC,GACtB,8CAA8C,GAC9C,6CAA6C,EAChD;UAAA6H,QAAA,EACJ;QAED;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET1I,OAAA;UACE6I,OAAO,EAAEpB,kBAAmB;UAC5BkB,SAAS,EAAC,4DAA4D;UAAAC,QAAA,EAErE7H,oBAAoB,GAAGN,MAAM,CAAC0C,SAAS,CAACC,MAAM,GAAG,CAAC,GAAG,WAAW,GAAG;QAAW;UAAAmF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtI,EAAA,CAn5BID,UAAU;EAAA,QACOZ,SAAS,EACbC,WAAW;AAAA;AAAAmK,EAAA,GAFxBxJ,UAAU;AAq5BhB,eAAeA,UAAU;AAAC,IAAAwJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}