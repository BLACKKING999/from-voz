{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\Sistema de Encuestas por Voz\\\\client\\\\src\\\\components\\\\SimpleVoice.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n/**\n * Componente automático para síntesis de voz\n * Habla automáticamente al montarse y notifica cuando termina\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleVoice = ({\n  text,\n  onEnd,\n  autoSpeak = true\n}) => {\n  _s();\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [lastEndTime, setLastEndTime] = useState(0);\n\n  // Función para hablar el texto proporcionado\n  const speak = () => {\n    // Comprobar si el navegador soporta la API\n    if (!window.speechSynthesis) {\n      console.error('Este navegador no soporta la síntesis de voz');\n      return;\n    }\n\n    // Evitar que se inicien múltiples instancias simultáneas\n    window.speechSynthesis.cancel();\n    console.log('Solicitando síntesis de voz para:', text);\n\n    // Crear mensaje de síntesis\n    const message = new SpeechSynthesisUtterance(text);\n\n    // Configurar idioma y voz en español (o una específica si está disponible)\n    message.lang = 'es-ES';\n    message.rate = 1.0; // Velocidad normal\n    message.pitch = 1.0; // Tono normal\n    message.volume = 1.0; // Volumen al máximo\n\n    // Seleccionar la primera voz en español disponible\n    const voices = window.speechSynthesis.getVoices().filter(voice => voice.lang.includes('es'));\n    if (voices.length > 0) {\n      message.voice = voices[0];\n    }\n\n    // Manejar el inicio de la síntesis\n    message.onstart = () => {\n      console.log('Síntesis de voz iniciada');\n      setIsSpeaking(true);\n    };\n\n    // Manejar el final de la síntesis\n    message.onend = () => {\n      console.log('Síntesis de voz completada para:', text);\n      setIsSpeaking(false);\n      setLastEndTime(Date.now());\n\n      // Llamar al callback onEnd si está definido\n      if (onEnd && typeof onEnd === 'function') {\n        onEnd();\n      }\n    };\n\n    // Manejar errores\n    message.onerror = event => {\n      console.error('Error en síntesis de voz:', event);\n      setIsSpeaking(false);\n\n      // Workaround para navegadores que no manejan bien el evento onend\n      setTimeout(() => {\n        if (onEnd && typeof onEnd === 'function') {\n          onEnd();\n        }\n      }, 1000);\n    };\n\n    // Reproducir sintetizador\n    window.speechSynthesis.speak(message);\n\n    // Workaround para el bug en Chrome donde se detiene después de 15 segundos\n    const timerId = setInterval(() => {\n      if (window.speechSynthesis.speaking) {\n        window.speechSynthesis.pause();\n        window.speechSynthesis.resume();\n      } else {\n        clearInterval(timerId);\n      }\n    }, 10000); // Cada 10 segundos\n  };\n\n  // Iniciar síntesis automáticamente si autoSpeak es true\n  useEffect(() => {\n    if (text && autoSpeak) {\n      speak();\n    }\n\n    // Limpiar síntesis en desmontaje\n    return () => {\n      window.speechSynthesis.cancel();\n    };\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `voice-synthesis ${isSpeaking ? 'speaking' : ''}`,\n    children: isSpeaking && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speaking-indicator\",\n      style: {\n        display: 'none'\n      },\n      children: \"Hablando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleVoice, \"2cOLsyJ9sLnqrSXRq0g14/7Dqhg=\");\n_c = SimpleVoice;\nexport default SimpleVoice;\nvar _c;\n$RefreshReg$(_c, \"SimpleVoice\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SimpleVoice","text","onEnd","autoSpeak","_s","isSpeaking","setIsSpeaking","lastEndTime","setLastEndTime","speak","window","speechSynthesis","console","error","cancel","log","message","SpeechSynthesisUtterance","lang","rate","pitch","volume","voices","getVoices","filter","voice","includes","length","onstart","onend","Date","now","onerror","event","setTimeout","timerId","setInterval","speaking","pause","resume","clearInterval","className","children","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/josep/Documents/Sistema de Encuestas por Voz/client/src/components/SimpleVoice.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n/**\n * Componente automático para síntesis de voz\n * Habla automáticamente al montarse y notifica cuando termina\n */\nconst SimpleVoice = ({ text, onEnd, autoSpeak = true }) => {\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [lastEndTime, setLastEndTime] = useState(0);\n  \n  // Función para hablar el texto proporcionado\n  const speak = () => {\n    // Comprobar si el navegador soporta la API\n    if (!window.speechSynthesis) {\n      console.error('Este navegador no soporta la síntesis de voz');\n      return;\n    }\n    \n    // Evitar que se inicien múltiples instancias simultáneas\n    window.speechSynthesis.cancel();\n    \n    console.log('Solicitando síntesis de voz para:', text);\n    \n    // Crear mensaje de síntesis\n    const message = new SpeechSynthesisUtterance(text);\n    \n    // Configurar idioma y voz en español (o una específica si está disponible)\n    message.lang = 'es-ES';\n    message.rate = 1.0;  // Velocidad normal\n    message.pitch = 1.0; // Tono normal\n    message.volume = 1.0; // Volumen al máximo\n    \n    // Seleccionar la primera voz en español disponible\n    const voices = window.speechSynthesis.getVoices().filter(\n      voice => voice.lang.includes('es')\n    );\n    \n    if (voices.length > 0) {\n      message.voice = voices[0];\n    }\n    \n    // Manejar el inicio de la síntesis\n    message.onstart = () => {\n      console.log('Síntesis de voz iniciada');\n      setIsSpeaking(true);\n    };\n    \n    // Manejar el final de la síntesis\n    message.onend = () => {\n      console.log('Síntesis de voz completada para:', text);\n      setIsSpeaking(false);\n      setLastEndTime(Date.now());\n      \n      // Llamar al callback onEnd si está definido\n      if (onEnd && typeof onEnd === 'function') {\n        onEnd();\n      }\n    };\n    \n    // Manejar errores\n    message.onerror = (event) => {\n      console.error('Error en síntesis de voz:', event);\n      setIsSpeaking(false);\n      \n      // Workaround para navegadores que no manejan bien el evento onend\n      setTimeout(() => {\n        if (onEnd && typeof onEnd === 'function') {\n          onEnd();\n        }\n      }, 1000);\n    };\n    \n    // Reproducir sintetizador\n    window.speechSynthesis.speak(message);\n    \n    // Workaround para el bug en Chrome donde se detiene después de 15 segundos\n    const timerId = setInterval(() => {\n      if (window.speechSynthesis.speaking) {\n        window.speechSynthesis.pause();\n        window.speechSynthesis.resume();\n      } else {\n        clearInterval(timerId);\n      }\n    }, 10000); // Cada 10 segundos\n  };\n  \n  // Iniciar síntesis automáticamente si autoSpeak es true\n  useEffect(() => {\n    if (text && autoSpeak) {\n      speak();\n    }\n    \n    // Limpiar síntesis en desmontaje\n    return () => {\n      window.speechSynthesis.cancel();\n    };\n  }, [text]);\n  \n  return (\n    <div className={`voice-synthesis ${isSpeaking ? 'speaking' : ''}`}>\n      {isSpeaking && (\n        <div className='speaking-indicator' style={{ display: 'none' }}>\n          Hablando...\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SimpleVoice;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,SAAS,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACA,MAAMa,KAAK,GAAGA,CAAA,KAAM;IAClB;IACA,IAAI,CAACC,MAAM,CAACC,eAAe,EAAE;MAC3BC,OAAO,CAACC,KAAK,CAAC,8CAA8C,CAAC;MAC7D;IACF;;IAEA;IACAH,MAAM,CAACC,eAAe,CAACG,MAAM,CAAC,CAAC;IAE/BF,OAAO,CAACG,GAAG,CAAC,mCAAmC,EAAEd,IAAI,CAAC;;IAEtD;IACA,MAAMe,OAAO,GAAG,IAAIC,wBAAwB,CAAChB,IAAI,CAAC;;IAElD;IACAe,OAAO,CAACE,IAAI,GAAG,OAAO;IACtBF,OAAO,CAACG,IAAI,GAAG,GAAG,CAAC,CAAE;IACrBH,OAAO,CAACI,KAAK,GAAG,GAAG,CAAC,CAAC;IACrBJ,OAAO,CAACK,MAAM,GAAG,GAAG,CAAC,CAAC;;IAEtB;IACA,MAAMC,MAAM,GAAGZ,MAAM,CAACC,eAAe,CAACY,SAAS,CAAC,CAAC,CAACC,MAAM,CACtDC,KAAK,IAAIA,KAAK,CAACP,IAAI,CAACQ,QAAQ,CAAC,IAAI,CACnC,CAAC;IAED,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC,EAAE;MACrBX,OAAO,CAACS,KAAK,GAAGH,MAAM,CAAC,CAAC,CAAC;IAC3B;;IAEA;IACAN,OAAO,CAACY,OAAO,GAAG,MAAM;MACtBhB,OAAO,CAACG,GAAG,CAAC,0BAA0B,CAAC;MACvCT,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC;;IAED;IACAU,OAAO,CAACa,KAAK,GAAG,MAAM;MACpBjB,OAAO,CAACG,GAAG,CAAC,kCAAkC,EAAEd,IAAI,CAAC;MACrDK,aAAa,CAAC,KAAK,CAAC;MACpBE,cAAc,CAACsB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;;MAE1B;MACA,IAAI7B,KAAK,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE;QACxCA,KAAK,CAAC,CAAC;MACT;IACF,CAAC;;IAED;IACAc,OAAO,CAACgB,OAAO,GAAIC,KAAK,IAAK;MAC3BrB,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEoB,KAAK,CAAC;MACjD3B,aAAa,CAAC,KAAK,CAAC;;MAEpB;MACA4B,UAAU,CAAC,MAAM;QACf,IAAIhC,KAAK,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE;UACxCA,KAAK,CAAC,CAAC;QACT;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;;IAED;IACAQ,MAAM,CAACC,eAAe,CAACF,KAAK,CAACO,OAAO,CAAC;;IAErC;IACA,MAAMmB,OAAO,GAAGC,WAAW,CAAC,MAAM;MAChC,IAAI1B,MAAM,CAACC,eAAe,CAAC0B,QAAQ,EAAE;QACnC3B,MAAM,CAACC,eAAe,CAAC2B,KAAK,CAAC,CAAC;QAC9B5B,MAAM,CAACC,eAAe,CAAC4B,MAAM,CAAC,CAAC;MACjC,CAAC,MAAM;QACLC,aAAa,CAACL,OAAO,CAAC;MACxB;IACF,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;EACb,CAAC;;EAED;EACAtC,SAAS,CAAC,MAAM;IACd,IAAII,IAAI,IAAIE,SAAS,EAAE;MACrBM,KAAK,CAAC,CAAC;IACT;;IAEA;IACA,OAAO,MAAM;MACXC,MAAM,CAACC,eAAe,CAACG,MAAM,CAAC,CAAC;IACjC,CAAC;EACH,CAAC,EAAE,CAACb,IAAI,CAAC,CAAC;EAEV,oBACEF,OAAA;IAAK0C,SAAS,EAAE,mBAAmBpC,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;IAAAqC,QAAA,EAC/DrC,UAAU,iBACTN,OAAA;MAAK0C,SAAS,EAAC,oBAAoB;MAACE,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAEhE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5C,EAAA,CArGIJ,WAAW;AAAAiD,EAAA,GAAXjD,WAAW;AAuGjB,eAAeA,WAAW;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}