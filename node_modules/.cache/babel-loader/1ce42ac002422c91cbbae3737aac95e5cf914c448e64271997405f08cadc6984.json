{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\Sistema de Encuestas por Voz\\\\client\\\\src\\\\pages\\\\VoiceTest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceTest = () => {\n  _s();\n  const [text, setText] = useState('Hola, esta es una prueba de voz simple. Si puedes escuchar esto, la síntesis de voz está funcionando correctamente.');\n\n  // Función exactamente igual que en el ejemplo HTML que funciona\n  const leerTexto = () => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'es-ES'; // Español\n    speechSynthesis.speak(utterance);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-8 max-w-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Prueba Simple de S\\xEDntesis de Voz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"Versi\\xF3n Exacta del Ejemplo HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"texto\",\n        rows: \"5\",\n        cols: \"40\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        className: \"w-full p-2 border rounded mb-4\",\n        placeholder: \"Escribe aqu\\xED el texto...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: leerTexto,\n        className: \"btn btn-primary mb-4\",\n        children: \"Leer en voz alta (Versi\\xF3n Simple)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-50 border-l-4 border-blue-400 p-4 mt-8\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-blue-700\",\n          children: [\"Esta versi\\xF3n usa \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"exactamente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 30\n          }, this), \" el mismo c\\xF3digo que el ejemplo HTML que funciona en Chrome.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceTest, \"UdpXlWH2y2qwGQmT1eIclCNtDS8=\");\n_c = VoiceTest;\nexport default VoiceTest;\nvar _c;\n$RefreshReg$(_c, \"VoiceTest\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VoiceTest","_s","text","setText","leerTexto","utterance","SpeechSynthesisUtterance","lang","speechSynthesis","speak","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","rows","cols","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/josep/Documents/Sistema de Encuestas por Voz/client/src/pages/VoiceTest.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst VoiceTest = () => {\n  const [text, setText] = useState('Hola, esta es una prueba de voz simple. Si puedes escuchar esto, la síntesis de voz está funcionando correctamente.');\n\n  // Función exactamente igual que en el ejemplo HTML que funciona\n  const leerTexto = () => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'es-ES'; // Español\n    speechSynthesis.speak(utterance);\n  };\n\n  return (\n    <div className=\"container mx-auto p-8 max-w-2xl\">\n      <h1 className=\"text-2xl font-bold mb-6\">Prueba Simple de Síntesis de Voz</h1>\n      \n      <div className=\"card p-6 mb-8\">\n        <h2 className=\"text-xl font-semibold mb-4\">Versión Exacta del Ejemplo HTML</h2>\n        \n        <textarea \n          id=\"texto\" \n          rows=\"5\" \n          cols=\"40\" \n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          className=\"w-full p-2 border rounded mb-4\"\n          placeholder=\"Escribe aquí el texto...\"\n        />\n        <br/>\n        \n        <button \n          onClick={leerTexto}\n          className=\"btn btn-primary mb-4\"\n        >\n          Leer en voz alta (Versión Simple)\n        </button>\n        \n        <div className=\"bg-blue-50 border-l-4 border-blue-400 p-4 mt-8\">\n          <p className=\"text-blue-700\">\n            Esta versión usa <strong>exactamente</strong> el mismo código que el ejemplo HTML que funciona en Chrome.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VoiceTest;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,qHAAqH,CAAC;;EAEvJ;EACA,MAAMO,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACJ,IAAI,CAAC;IACpDG,SAAS,CAACE,IAAI,GAAG,OAAO,CAAC,CAAC;IAC1BC,eAAe,CAACC,KAAK,CAACJ,SAAS,CAAC;EAClC,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CZ,OAAA;MAAIW,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7EhB,OAAA;MAAKW,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BZ,OAAA;QAAIW,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE/EhB,OAAA;QACEiB,EAAE,EAAC,OAAO;QACVC,IAAI,EAAC,GAAG;QACRC,IAAI,EAAC,IAAI;QACTC,KAAK,EAAEjB,IAAK;QACZkB,QAAQ,EAAGC,CAAC,IAAKlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACzCT,SAAS,EAAC,gCAAgC;QAC1Ca,WAAW,EAAC;MAA0B;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACFhB,OAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAELhB,OAAA;QACEyB,OAAO,EAAEpB,SAAU;QACnBM,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EACjC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEThB,OAAA;QAAKW,SAAS,EAAC,gDAAgD;QAAAC,QAAA,eAC7DZ,OAAA;UAAGW,SAAS,EAAC,eAAe;UAAAC,QAAA,GAAC,sBACV,eAAAZ,OAAA;YAAAY,QAAA,EAAQ;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,mEAC/C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CA3CID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}