{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\Sistema de Encuestas por Voz\\\\client\\\\src\\\\components\\\\SimpleVoice.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n/**\n * Componente simple para síntesis de voz, usando el mismo enfoque\n * que el ejemplo HTML que funciona correctamente\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleVoice = ({\n  text,\n  onSpeakEnd\n}) => {\n  _s();\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const speak = () => {\n    if (!window.speechSynthesis) {\n      console.error(\"Speech synthesis no está disponible en este navegador\");\n      return;\n    }\n\n    // Cancelar cualquier síntesis anterior\n    window.speechSynthesis.cancel();\n\n    // Crear un nuevo utterance\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'es-ES';\n    utterance.rate = 1;\n    utterance.pitch = 1;\n    utterance.volume = 1;\n\n    // Configurar eventos\n    setIsSpeaking(true);\n    utterance.onend = () => {\n      setIsSpeaking(false);\n      if (onSpeakEnd) {\n        onSpeakEnd();\n      }\n    };\n    utterance.onerror = error => {\n      console.error(\"Error en síntesis de voz:\", error);\n      setIsSpeaking(false);\n    };\n\n    // Llamar a speak directamente, como en el ejemplo HTML que funciona\n    window.speechSynthesis.speak(utterance);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-2\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: speak,\n      disabled: isSpeaking,\n      className: `btn ${isSpeaking ? 'btn-secondary' : 'btn-primary'}`,\n      children: isSpeaking ? \"Hablando...\" : \"Leer en voz alta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleVoice, \"qSdgVYRiBjKLZwoQt+/BTLr17Ew=\");\n_c = SimpleVoice;\nexport default SimpleVoice;\nvar _c;\n$RefreshReg$(_c, \"SimpleVoice\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SimpleVoice","text","onSpeakEnd","_s","isSpeaking","setIsSpeaking","speak","window","speechSynthesis","console","error","cancel","utterance","SpeechSynthesisUtterance","lang","rate","pitch","volume","onend","onerror","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/josep/Documents/Sistema de Encuestas por Voz/client/src/components/SimpleVoice.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\n/**\n * Componente simple para síntesis de voz, usando el mismo enfoque\n * que el ejemplo HTML que funciona correctamente\n */\nconst SimpleVoice = ({ text, onSpeakEnd }) => {\n  const [isSpeaking, setIsSpeaking] = useState(false);\n\n  const speak = () => {\n    if (!window.speechSynthesis) {\n      console.error(\"Speech synthesis no está disponible en este navegador\");\n      return;\n    }\n    \n    // Cancelar cualquier síntesis anterior\n    window.speechSynthesis.cancel();\n    \n    // Crear un nuevo utterance\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'es-ES';\n    utterance.rate = 1;\n    utterance.pitch = 1;\n    utterance.volume = 1;\n    \n    // Configurar eventos\n    setIsSpeaking(true);\n    \n    utterance.onend = () => {\n      setIsSpeaking(false);\n      if (onSpeakEnd) {\n        onSpeakEnd();\n      }\n    };\n    \n    utterance.onerror = (error) => {\n      console.error(\"Error en síntesis de voz:\", error);\n      setIsSpeaking(false);\n    };\n    \n    // Llamar a speak directamente, como en el ejemplo HTML que funciona\n    window.speechSynthesis.speak(utterance);\n  };\n\n  return (\n    <div className=\"my-2\">\n      <button \n        onClick={speak}\n        disabled={isSpeaking}\n        className={`btn ${isSpeaking ? 'btn-secondary' : 'btn-primary'}`}\n      >\n        {isSpeaking ? \"Hablando...\" : \"Leer en voz alta\"}\n      </button>\n    </div>\n  );\n};\n\nexport default SimpleVoice;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMS,KAAK,GAAGA,CAAA,KAAM;IAClB,IAAI,CAACC,MAAM,CAACC,eAAe,EAAE;MAC3BC,OAAO,CAACC,KAAK,CAAC,uDAAuD,CAAC;MACtE;IACF;;IAEA;IACAH,MAAM,CAACC,eAAe,CAACG,MAAM,CAAC,CAAC;;IAE/B;IACA,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACZ,IAAI,CAAC;IACpDW,SAAS,CAACE,IAAI,GAAG,OAAO;IACxBF,SAAS,CAACG,IAAI,GAAG,CAAC;IAClBH,SAAS,CAACI,KAAK,GAAG,CAAC;IACnBJ,SAAS,CAACK,MAAM,GAAG,CAAC;;IAEpB;IACAZ,aAAa,CAAC,IAAI,CAAC;IAEnBO,SAAS,CAACM,KAAK,GAAG,MAAM;MACtBb,aAAa,CAAC,KAAK,CAAC;MACpB,IAAIH,UAAU,EAAE;QACdA,UAAU,CAAC,CAAC;MACd;IACF,CAAC;IAEDU,SAAS,CAACO,OAAO,GAAIT,KAAK,IAAK;MAC7BD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDL,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC;;IAED;IACAE,MAAM,CAACC,eAAe,CAACF,KAAK,CAACM,SAAS,CAAC;EACzC,CAAC;EAED,oBACEb,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBtB,OAAA;MACEuB,OAAO,EAAEhB,KAAM;MACfiB,QAAQ,EAAEnB,UAAW;MACrBgB,SAAS,EAAE,OAAOhB,UAAU,GAAG,eAAe,GAAG,aAAa,EAAG;MAAAiB,QAAA,EAEhEjB,UAAU,GAAG,aAAa,GAAG;IAAkB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CAjDIH,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}